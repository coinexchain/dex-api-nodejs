/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import BigDecimal from '../model/BigDecimal';
import BlockQuery from '../model/BlockQuery';

/**
* Tendermint service.
* @module api/TendermintApi
* @version 3.0
*/
export default class TendermintApi {

    /**
    * Constructs a new TendermintApi. 
    * @alias module:api/TendermintApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getBlock operation.
     * @callback module:api/TendermintApi~getBlockCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlockQuery} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a block at a certain height
     * @param {module:api/TendermintApi~getBlockCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlockQuery}
     */
    getBlock(height, callback) {
      let postBody = null;

      let pathParams = {
        'height': height
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BlockQuery;

      return this.apiClient.callApi(
        '/blocks/{height}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getLatestBlock operation.
     * @callback module:api/TendermintApi~getLatestBlockCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlockQuery} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the latest block
     * @param {module:api/TendermintApi~getLatestBlockCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlockQuery}
     */
    getLatestBlock(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BlockQuery;

      return this.apiClient.callApi(
        '/blocks/latest', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getLatestValidatorSet operation.
     * @callback module:api/TendermintApi~getLatestValidatorSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the latest validator set
     * @param {module:api/TendermintApi~getLatestValidatorSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getLatestValidatorSet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/validatorsets/latest', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getNodeInfo operation.
     * @callback module:api/TendermintApi~getNodeInfoCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The properties of the connected node
     * Information about the connected node
     * @param {module:api/TendermintApi~getNodeInfoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getNodeInfo(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/node_info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getSyncing operation.
     * @callback module:api/TendermintApi~getSyncingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Syncing state of node
     * Get if the node is currently syning with other nodes
     * @param {module:api/TendermintApi~getSyncingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getSyncing(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/syncing', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getValidatorSet operation.
     * @callback module:api/TendermintApi~getValidatorSetCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a validator set a certain height
     * @param {module:api/TendermintApi~getValidatorSetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getValidatorSet(height, callback) {
      let postBody = null;

      let pathParams = {
        'height': height
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;

      return this.apiClient.callApi(
        '/validatorsets/{height}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
