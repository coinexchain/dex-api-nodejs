/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineResponse20057 from '../model/InlineResponse20057';

/**
* Bancor service.
* @module api/BancorApi
* @version 3.0
*/
export default class BancorApi {

    /**
    * Constructs a new BancorApi. 
    * @alias module:api/BancorApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Query bancor market deal
     * Query bancor market deal until to given time
     * @param {String} market B:stock/money
     * @param {Number} time Unix timestamp
     * @param {Number} sid Sequence id
     * @param {Number} count Querier deal count limited to 1024
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse20057} and HTTP response
     */
    queryBancorDealWithHttpInfo(market, time, sid, count) {
      let postBody = null;
      // verify the required parameter 'market' is set
      if (market === undefined || market === null) {
        throw new Error("Missing the required parameter 'market' when calling queryBancorDeal");
      }
      // verify the required parameter 'time' is set
      if (time === undefined || time === null) {
        throw new Error("Missing the required parameter 'time' when calling queryBancorDeal");
      }
      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling queryBancorDeal");
      }
      // verify the required parameter 'count' is set
      if (count === undefined || count === null) {
        throw new Error("Missing the required parameter 'count' when calling queryBancorDeal");
      }

      let pathParams = {
      };
      let queryParams = {
        'market': market,
        'time': time,
        'sid': sid,
        'count': count
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse20057;
      return this.apiClient.callApi(
        '/bancorlite/deals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Query bancor market deal
     * Query bancor market deal until to given time
     * @param {String} market B:stock/money
     * @param {Number} time Unix timestamp
     * @param {Number} sid Sequence id
     * @param {Number} count Querier deal count limited to 1024
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse20057}
     */
    queryBancorDeal(market, time, sid, count) {
      return this.queryBancorDealWithHttpInfo(market, time, sid, count)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
