/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';
import BaseReq from './BaseReq';

/**
* The Whitelist model module.
* @module model/Whitelist
* @version 3.0
*/
export default class Whitelist {
    /**
    * Constructs a new <code>Whitelist</code>.
    * @alias module:model/Whitelist
    * @class
    * @param baseReq {module:model/BaseReq} 
    * @param whitelist {Array.<module:model/Address>} 
    */

    constructor(baseReq, whitelist) {
        
        
        this['base_req'] = baseReq;
        this['whitelist'] = whitelist;
        
    }

    /**
    * Constructs a <code>Whitelist</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Whitelist} obj Optional instance to populate.
    * @return {module:model/Whitelist} The populated <code>Whitelist</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Whitelist();
                        
            
            if (data.hasOwnProperty('base_req')) {
                obj['base_req'] = BaseReq.constructFromObject(data['base_req']);
            }
            if (data.hasOwnProperty('whitelist')) {
                obj['whitelist'] = ApiClient.convertToType(data['whitelist'], [Address]);
            }
        }
        return obj;
    }

    /**
    * @member {module:model/BaseReq} base_req
    */
    base_req = undefined;
    /**
    * @member {Array.<module:model/Address>} whitelist
    */
    whitelist = undefined;




}
