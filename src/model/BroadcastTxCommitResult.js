/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BroadcastTxCommitResultEvents from './BroadcastTxCommitResultEvents';
import BroadcastTxCommitResultLogs from './BroadcastTxCommitResultLogs';

/**
 * The BroadcastTxCommitResult model module.
 * @module model/BroadcastTxCommitResult
 * @version 3.0
 */
class BroadcastTxCommitResult {
    /**
     * Constructs a new <code>BroadcastTxCommitResult</code>.
     * @alias module:model/BroadcastTxCommitResult
     */
    constructor() { 
        
        BroadcastTxCommitResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BroadcastTxCommitResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BroadcastTxCommitResult} obj Optional instance to populate.
     * @return {module:model/BroadcastTxCommitResult} The populated <code>BroadcastTxCommitResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BroadcastTxCommitResult();

            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'String');
            }
            if (data.hasOwnProperty('txhash')) {
                obj['txhash'] = ApiClient.convertToType(data['txhash'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'Number');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('raw_log')) {
                obj['raw_log'] = ApiClient.convertToType(data['raw_log'], 'String');
            }
            if (data.hasOwnProperty('logs')) {
                obj['logs'] = ApiClient.convertToType(data['logs'], [BroadcastTxCommitResultLogs]);
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = ApiClient.convertToType(data['info'], 'String');
            }
            if (data.hasOwnProperty('gas_wanted')) {
                obj['gas_wanted'] = ApiClient.convertToType(data['gas_wanted'], 'String');
            }
            if (data.hasOwnProperty('gas_used')) {
                obj['gas_used'] = ApiClient.convertToType(data['gas_used'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [BroadcastTxCommitResultEvents]);
            }
            if (data.hasOwnProperty('codespace')) {
                obj['codespace'] = ApiClient.convertToType(data['codespace'], 'String');
            }
            if (data.hasOwnProperty('tx')) {
                obj['tx'] = ApiClient.convertToType(data['tx'], Object);
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} height
 */
BroadcastTxCommitResult.prototype['height'] = undefined;

/**
 * @member {String} txhash
 */
BroadcastTxCommitResult.prototype['txhash'] = undefined;

/**
 * @member {Number} code
 */
BroadcastTxCommitResult.prototype['code'] = undefined;

/**
 * @member {String} data
 */
BroadcastTxCommitResult.prototype['data'] = undefined;

/**
 * @member {String} raw_log
 */
BroadcastTxCommitResult.prototype['raw_log'] = undefined;

/**
 * @member {Array.<module:model/BroadcastTxCommitResultLogs>} logs
 */
BroadcastTxCommitResult.prototype['logs'] = undefined;

/**
 * @member {String} info
 */
BroadcastTxCommitResult.prototype['info'] = undefined;

/**
 * @member {String} gas_wanted
 */
BroadcastTxCommitResult.prototype['gas_wanted'] = undefined;

/**
 * @member {String} gas_used
 */
BroadcastTxCommitResult.prototype['gas_used'] = undefined;

/**
 * @member {Array.<module:model/BroadcastTxCommitResultEvents>} events
 */
BroadcastTxCommitResult.prototype['events'] = undefined;

/**
 * @member {String} codespace
 */
BroadcastTxCommitResult.prototype['codespace'] = undefined;

/**
 * @member {Object} tx
 */
BroadcastTxCommitResult.prototype['tx'] = undefined;

/**
 * @member {String} timestamp
 */
BroadcastTxCommitResult.prototype['timestamp'] = undefined;






export default BroadcastTxCommitResult;

