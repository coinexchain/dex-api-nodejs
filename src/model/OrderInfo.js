/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Order from './Order';

/**
* The OrderInfo model module.
* @module model/OrderInfo
* @version 3.0
*/
export default class OrderInfo {
    /**
    * Constructs a new <code>OrderInfo</code>.
    * @alias module:model/OrderInfo
    * @class
    * @extends module:model/Order
    * @param orderType {} The identify of the price limit : 2; (Currently, only price limit orders are supported)
    * @param tradingPair {} 
    * @param price {} 
    * @param quantity {} 
    * @param side {} The buying or selling direction of an order.(buy : 1; sell : 2)
    * @param identify {} A transaction can contain multiple order creation messages, the identify field was added to the order creation message to give each order a unique ID. So the order ID consists of user address, user sequence, identify.
    */

    constructor(orderType, tradingPair, price, quantity, side, identify) {
        Order.call(this, orderType, tradingPair, price, quantity, side, identify);
        
        
    }

    /**
    * Constructs a <code>OrderInfo</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/OrderInfo} obj Optional instance to populate.
    * @return {module:model/OrderInfo} The populated <code>OrderInfo</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderInfo();
            
            Order.constructFromObject(data, obj);
            
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
            }
            if (data.hasOwnProperty('sequence')) {
                obj['sequence'] = ApiClient.convertToType(data['sequence'], 'String');
            }
            if (data.hasOwnProperty('time_in_force')) {
                obj['time_in_force'] = ApiClient.convertToType(data['time_in_force'], 'String');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'String');
            }
            if (data.hasOwnProperty('frozen_fee')) {
                obj['frozen_fee'] = ApiClient.convertToType(data['frozen_fee'], 'String');
            }
            if (data.hasOwnProperty('left_stock')) {
                obj['left_stock'] = ApiClient.convertToType(data['left_stock'], 'String');
            }
            if (data.hasOwnProperty('freeze')) {
                obj['freeze'] = ApiClient.convertToType(data['freeze'], 'String');
            }
            if (data.hasOwnProperty('DealStock')) {
                obj['DealStock'] = ApiClient.convertToType(data['DealStock'], 'String');
            }
            if (data.hasOwnProperty('DealMoney')) {
                obj['DealMoney'] = ApiClient.convertToType(data['DealMoney'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {String} sender
    */
    sender = undefined;
    /**
    * @member {String} sequence
    */
    sequence = undefined;
    /**
    * @member {String} time_in_force
    */
    time_in_force = undefined;
    /**
    * @member {String} height
    */
    height = undefined;
    /**
    * @member {String} frozen_fee
    */
    frozen_fee = undefined;
    /**
    * @member {String} left_stock
    */
    left_stock = undefined;
    /**
    * @member {String} freeze
    */
    freeze = undefined;
    /**
    * @member {String} DealStock
    */
    DealStock = undefined;
    /**
    * @member {String} DealMoney
    */
    DealMoney = undefined;




}
