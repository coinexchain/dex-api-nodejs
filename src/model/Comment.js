/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommentRef from './CommentRef';

/**
 * The Comment model module.
 * @module model/Comment
 * @version 3.0
 */
class Comment {
    /**
     * Constructs a new <code>Comment</code>.
     * @alias module:model/Comment
     */
    constructor() { 
        
        Comment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Comment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Comment} obj Optional instance to populate.
     * @return {module:model/Comment} The populated <code>Comment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Comment();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('donation')) {
                obj['donation'] = ApiClient.convertToType(data['donation'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'Number');
            }
            if (data.hasOwnProperty('references')) {
                obj['references'] = ApiClient.convertToType(data['references'], [CommentRef]);
            }
            if (data.hasOwnProperty('tx_hash')) {
                obj['tx_hash'] = ApiClient.convertToType(data['tx_hash'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} id
 */
Comment.prototype['id'] = undefined;

/**
 * @member {Number} height
 */
Comment.prototype['height'] = undefined;

/**
 * bech32 encoded address
 * @member {String} sender
 */
Comment.prototype['sender'] = undefined;

/**
 * @member {String} token
 */
Comment.prototype['token'] = undefined;

/**
 * @member {Number} donation
 */
Comment.prototype['donation'] = undefined;

/**
 * @member {String} title
 */
Comment.prototype['title'] = undefined;

/**
 * @member {String} content
 */
Comment.prototype['content'] = undefined;

/**
 * IPFS:0,Magnet:1,HTTP:2,UTF8Text:3,RawBytes:6
 * @member {Number} content_type
 */
Comment.prototype['content_type'] = undefined;

/**
 * @member {Array.<module:model/CommentRef>} references
 */
Comment.prototype['references'] = undefined;

/**
 * The tx hash
 * @member {String} tx_hash
 */
Comment.prototype['tx_hash'] = undefined;






export default Comment;

