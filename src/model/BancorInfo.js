/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BancorInfo model module.
 * @module model/BancorInfo
 * @version 3.0
 */
class BancorInfo {
    /**
     * Constructs a new <code>BancorInfo</code>.
     * @alias module:model/BancorInfo
     * @param owner {String} 
     * @param stock {String} 
     * @param money {String} 
     * @param initPrice {String} 
     * @param maxSupply {String} 
     * @param maxPrice {String} 
     * @param maxMoney {String} 
     * @param ar {String} 
     * @param currentPrice {String} 
     * @param stockInPool {String} 
     * @param moneyInPool {String} 
     * @param earliestCancelTime {String} 
     */
    constructor(owner, stock, money, initPrice, maxSupply, maxPrice, maxMoney, ar, currentPrice, stockInPool, moneyInPool, earliestCancelTime) { 
        
        BancorInfo.initialize(this, owner, stock, money, initPrice, maxSupply, maxPrice, maxMoney, ar, currentPrice, stockInPool, moneyInPool, earliestCancelTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, owner, stock, money, initPrice, maxSupply, maxPrice, maxMoney, ar, currentPrice, stockInPool, moneyInPool, earliestCancelTime) { 
        obj['owner'] = owner;
        obj['stock'] = stock;
        obj['money'] = money;
        obj['init_price'] = initPrice;
        obj['max_supply'] = maxSupply;
        obj['max_price'] = maxPrice;
        obj['max_money'] = maxMoney;
        obj['ar'] = ar;
        obj['current_price'] = currentPrice;
        obj['stock_in_pool'] = stockInPool;
        obj['money_in_pool'] = moneyInPool;
        obj['earliest_cancel_time'] = earliestCancelTime;
    }

    /**
     * Constructs a <code>BancorInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BancorInfo} obj Optional instance to populate.
     * @return {module:model/BancorInfo} The populated <code>BancorInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BancorInfo();

            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('stock')) {
                obj['stock'] = ApiClient.convertToType(data['stock'], 'String');
            }
            if (data.hasOwnProperty('money')) {
                obj['money'] = ApiClient.convertToType(data['money'], 'String');
            }
            if (data.hasOwnProperty('init_price')) {
                obj['init_price'] = ApiClient.convertToType(data['init_price'], 'String');
            }
            if (data.hasOwnProperty('max_supply')) {
                obj['max_supply'] = ApiClient.convertToType(data['max_supply'], 'String');
            }
            if (data.hasOwnProperty('stock_precision')) {
                obj['stock_precision'] = ApiClient.convertToType(data['stock_precision'], 'String');
            }
            if (data.hasOwnProperty('max_price')) {
                obj['max_price'] = ApiClient.convertToType(data['max_price'], 'String');
            }
            if (data.hasOwnProperty('max_money')) {
                obj['max_money'] = ApiClient.convertToType(data['max_money'], 'String');
            }
            if (data.hasOwnProperty('ar')) {
                obj['ar'] = ApiClient.convertToType(data['ar'], 'String');
            }
            if (data.hasOwnProperty('current_price')) {
                obj['current_price'] = ApiClient.convertToType(data['current_price'], 'String');
            }
            if (data.hasOwnProperty('stock_in_pool')) {
                obj['stock_in_pool'] = ApiClient.convertToType(data['stock_in_pool'], 'String');
            }
            if (data.hasOwnProperty('money_in_pool')) {
                obj['money_in_pool'] = ApiClient.convertToType(data['money_in_pool'], 'String');
            }
            if (data.hasOwnProperty('earliest_cancel_time')) {
                obj['earliest_cancel_time'] = ApiClient.convertToType(data['earliest_cancel_time'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} owner
 */
BancorInfo.prototype['owner'] = undefined;

/**
 * @member {String} stock
 */
BancorInfo.prototype['stock'] = undefined;

/**
 * @member {String} money
 */
BancorInfo.prototype['money'] = undefined;

/**
 * @member {String} init_price
 */
BancorInfo.prototype['init_price'] = undefined;

/**
 * @member {String} max_supply
 */
BancorInfo.prototype['max_supply'] = undefined;

/**
 * @member {String} stock_precision
 */
BancorInfo.prototype['stock_precision'] = undefined;

/**
 * @member {String} max_price
 */
BancorInfo.prototype['max_price'] = undefined;

/**
 * @member {String} max_money
 */
BancorInfo.prototype['max_money'] = undefined;

/**
 * @member {String} ar
 */
BancorInfo.prototype['ar'] = undefined;

/**
 * @member {String} current_price
 */
BancorInfo.prototype['current_price'] = undefined;

/**
 * @member {String} stock_in_pool
 */
BancorInfo.prototype['stock_in_pool'] = undefined;

/**
 * @member {String} money_in_pool
 */
BancorInfo.prototype['money_in_pool'] = undefined;

/**
 * @member {String} earliest_cancel_time
 */
BancorInfo.prototype['earliest_cancel_time'] = undefined;






export default BancorInfo;

