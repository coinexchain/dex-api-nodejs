/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TokenValue model module.
 * @module model/TokenValue
 * @version 3.0
 */
class TokenValue {
    /**
     * Constructs a new <code>TokenValue</code>.
     * @alias module:model/TokenValue
     * @param name {String} 
     * @param symbol {String} 
     * @param totalSupply {String} 
     * @param mintable {Boolean} 
     * @param burnable {Boolean} 
     * @param addrForbiddable {Boolean} 
     * @param tokenForbiddable {Boolean} 
     * @param sendLock {String} 
     * @param totalBurn {String} 
     * @param totalMint {String} 
     * @param isForbidden {Boolean} 
     */
    constructor(name, symbol, totalSupply, mintable, burnable, addrForbiddable, tokenForbiddable, sendLock, totalBurn, totalMint, isForbidden) { 
        
        TokenValue.initialize(this, name, symbol, totalSupply, mintable, burnable, addrForbiddable, tokenForbiddable, sendLock, totalBurn, totalMint, isForbidden);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, symbol, totalSupply, mintable, burnable, addrForbiddable, tokenForbiddable, sendLock, totalBurn, totalMint, isForbidden) { 
        obj['name'] = name;
        obj['symbol'] = symbol;
        obj['total_supply'] = totalSupply;
        obj['mintable'] = mintable;
        obj['burnable'] = burnable;
        obj['addr_forbiddable'] = addrForbiddable;
        obj['token_forbiddable'] = tokenForbiddable;
        obj['send_lock'] = sendLock;
        obj['total_burn'] = totalBurn;
        obj['total_mint'] = totalMint;
        obj['is_forbidden'] = isForbidden;
    }

    /**
     * Constructs a <code>TokenValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TokenValue} obj Optional instance to populate.
     * @return {module:model/TokenValue} The populated <code>TokenValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TokenValue();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('total_supply')) {
                obj['total_supply'] = ApiClient.convertToType(data['total_supply'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('mintable')) {
                obj['mintable'] = ApiClient.convertToType(data['mintable'], 'Boolean');
            }
            if (data.hasOwnProperty('burnable')) {
                obj['burnable'] = ApiClient.convertToType(data['burnable'], 'Boolean');
            }
            if (data.hasOwnProperty('addr_forbiddable')) {
                obj['addr_forbiddable'] = ApiClient.convertToType(data['addr_forbiddable'], 'Boolean');
            }
            if (data.hasOwnProperty('token_forbiddable')) {
                obj['token_forbiddable'] = ApiClient.convertToType(data['token_forbiddable'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('identity')) {
                obj['identity'] = ApiClient.convertToType(data['identity'], 'String');
            }
            if (data.hasOwnProperty('send_lock')) {
                obj['send_lock'] = ApiClient.convertToType(data['send_lock'], 'String');
            }
            if (data.hasOwnProperty('total_burn')) {
                obj['total_burn'] = ApiClient.convertToType(data['total_burn'], 'String');
            }
            if (data.hasOwnProperty('total_mint')) {
                obj['total_mint'] = ApiClient.convertToType(data['total_mint'], 'String');
            }
            if (data.hasOwnProperty('is_forbidden')) {
                obj['is_forbidden'] = ApiClient.convertToType(data['is_forbidden'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
TokenValue.prototype['name'] = undefined;

/**
 * @member {String} symbol
 */
TokenValue.prototype['symbol'] = undefined;

/**
 * @member {String} total_supply
 */
TokenValue.prototype['total_supply'] = undefined;

/**
 * bech32 encoded address
 * @member {String} owner
 */
TokenValue.prototype['owner'] = undefined;

/**
 * @member {Boolean} mintable
 */
TokenValue.prototype['mintable'] = undefined;

/**
 * @member {Boolean} burnable
 */
TokenValue.prototype['burnable'] = undefined;

/**
 * @member {Boolean} addr_forbiddable
 */
TokenValue.prototype['addr_forbiddable'] = undefined;

/**
 * @member {Boolean} token_forbiddable
 */
TokenValue.prototype['token_forbiddable'] = undefined;

/**
 * @member {String} url
 */
TokenValue.prototype['url'] = undefined;

/**
 * @member {String} description
 */
TokenValue.prototype['description'] = undefined;

/**
 * @member {String} identity
 */
TokenValue.prototype['identity'] = undefined;

/**
 * @member {String} send_lock
 */
TokenValue.prototype['send_lock'] = undefined;

/**
 * @member {String} total_burn
 */
TokenValue.prototype['total_burn'] = undefined;

/**
 * @member {String} total_mint
 */
TokenValue.prototype['total_mint'] = undefined;

/**
 * @member {Boolean} is_forbidden
 */
TokenValue.prototype['is_forbidden'] = undefined;






export default TokenValue;

