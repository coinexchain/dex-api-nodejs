/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ParamChange model module.
 * @module model/ParamChange
 * @version 3.0
 */
class ParamChange {
    /**
     * Constructs a new <code>ParamChange</code>.
     * @alias module:model/ParamChange
     * @param subspace {String} 
     * @param key {String} 
     * @param subkey {String} 
     * @param value {Object} 
     */
    constructor(subspace, key, subkey, value) { 
        
        ParamChange.initialize(this, subspace, key, subkey, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, subspace, key, subkey, value) { 
        obj['subspace'] = subspace;
        obj['key'] = key;
        obj['subkey'] = subkey;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>ParamChange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ParamChange} obj Optional instance to populate.
     * @return {module:model/ParamChange} The populated <code>ParamChange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ParamChange();

            if (data.hasOwnProperty('subspace')) {
                obj['subspace'] = ApiClient.convertToType(data['subspace'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('subkey')) {
                obj['subkey'] = ApiClient.convertToType(data['subkey'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {String} subspace
 */
ParamChange.prototype['subspace'] = undefined;

/**
 * @member {String} key
 */
ParamChange.prototype['key'] = undefined;

/**
 * @member {String} subkey
 */
ParamChange.prototype['subkey'] = undefined;

/**
 * @member {Object} value
 */
ParamChange.prototype['value'] = undefined;






export default ParamChange;

