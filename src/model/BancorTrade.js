/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BancorTrade model module.
 * @module model/BancorTrade
 * @version 3.0
 */
class BancorTrade {
    /**
     * Constructs a new <code>BancorTrade</code>.
     * @alias module:model/BancorTrade
     */
    constructor() { 
        
        BancorTrade.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BancorTrade</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BancorTrade} obj Optional instance to populate.
     * @return {module:model/BancorTrade} The populated <code>BancorTrade</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BancorTrade();

            if (data.hasOwnProperty('sender')) {
                obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
            }
            if (data.hasOwnProperty('stock')) {
                obj['stock'] = ApiClient.convertToType(data['stock'], 'String');
            }
            if (data.hasOwnProperty('money')) {
                obj['money'] = ApiClient.convertToType(data['money'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('side')) {
                obj['side'] = ApiClient.convertToType(data['side'], 'Number');
            }
            if (data.hasOwnProperty('money_limit')) {
                obj['money_limit'] = ApiClient.convertToType(data['money_limit'], 'Number');
            }
            if (data.hasOwnProperty('transaction_price')) {
                obj['transaction_price'] = ApiClient.convertToType(data['transaction_price'], 'String');
            }
            if (data.hasOwnProperty('block_height')) {
                obj['block_height'] = ApiClient.convertToType(data['block_height'], 'Number');
            }
            if (data.hasOwnProperty('tx_hash')) {
                obj['tx_hash'] = ApiClient.convertToType(data['tx_hash'], 'String');
            }
        }
        return obj;
    }


}

/**
 * bech32 encoded address
 * @member {String} sender
 */
BancorTrade.prototype['sender'] = undefined;

/**
 * @member {String} stock
 */
BancorTrade.prototype['stock'] = undefined;

/**
 * @member {String} money
 */
BancorTrade.prototype['money'] = undefined;

/**
 * @member {Number} amount
 */
BancorTrade.prototype['amount'] = undefined;

/**
 * BUY:1/SELL:2
 * @member {Number} side
 */
BancorTrade.prototype['side'] = undefined;

/**
 * @member {Number} money_limit
 */
BancorTrade.prototype['money_limit'] = undefined;

/**
 * @member {String} transaction_price
 */
BancorTrade.prototype['transaction_price'] = undefined;

/**
 * @member {Number} block_height
 */
BancorTrade.prototype['block_height'] = undefined;

/**
 * The tx hash
 * @member {String} tx_hash
 */
BancorTrade.prototype['tx_hash'] = undefined;






export default BancorTrade;

