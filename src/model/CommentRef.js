/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CommentRef model module.
 * @module model/CommentRef
 * @version 3.0
 */
class CommentRef {
    /**
     * Constructs a new <code>CommentRef</code>.
     * @alias module:model/CommentRef
     * @param id {String} 
     * @param rewardTarget {String} 
     * @param rewardToken {String} 
     * @param rewardAmount {String} 
     * @param attitudes {Array.<Number>} 
     */
    constructor(id, rewardTarget, rewardToken, rewardAmount, attitudes) { 
        
        CommentRef.initialize(this, id, rewardTarget, rewardToken, rewardAmount, attitudes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, rewardTarget, rewardToken, rewardAmount, attitudes) { 
        obj['id'] = id;
        obj['reward_target'] = rewardTarget;
        obj['reward_token'] = rewardToken;
        obj['reward_amount'] = rewardAmount;
        obj['attitudes'] = attitudes;
    }

    /**
     * Constructs a <code>CommentRef</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CommentRef} obj Optional instance to populate.
     * @return {module:model/CommentRef} The populated <code>CommentRef</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CommentRef();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('reward_target')) {
                obj['reward_target'] = ApiClient.convertToType(data['reward_target'], 'String');
            }
            if (data.hasOwnProperty('reward_token')) {
                obj['reward_token'] = ApiClient.convertToType(data['reward_token'], 'String');
            }
            if (data.hasOwnProperty('reward_amount')) {
                obj['reward_amount'] = ApiClient.convertToType(data['reward_amount'], 'String');
            }
            if (data.hasOwnProperty('attitudes')) {
                obj['attitudes'] = ApiClient.convertToType(data['attitudes'], ['Number']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
CommentRef.prototype['id'] = undefined;

/**
 * @member {String} reward_target
 */
CommentRef.prototype['reward_target'] = undefined;

/**
 * @member {String} reward_token
 */
CommentRef.prototype['reward_token'] = undefined;

/**
 * @member {String} reward_amount
 */
CommentRef.prototype['reward_amount'] = undefined;

/**
 * @member {Array.<Number>} attitudes
 */
CommentRef.prototype['attitudes'] = undefined;






export default CommentRef;

