/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DexApiNodejs);
  }
}(this, function(expect, DexApiNodejs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DexApiNodejs.InlineResponse20037Result();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse20037Result', function() {
    it('should create an instance of InlineResponse20037Result', function() {
      // uncomment below and update the code to test InlineResponse20037Result
      //var instane = new DexApiNodejs.InlineResponse20037Result();
      //expect(instance).to.be.a(DexApiNodejs.InlineResponse20037Result);
    });

    it('should have the property issueTokenFee (base name: "issue_token_fee")', function() {
      // uncomment below and update the code to test the property issueTokenFee
      //var instane = new DexApiNodejs.InlineResponse20037Result();
      //expect(instance).to.be();
    });

    it('should have the property issueRareTokenFee (base name: "issue_rare_token_fee")', function() {
      // uncomment below and update the code to test the property issueRareTokenFee
      //var instane = new DexApiNodejs.InlineResponse20037Result();
      //expect(instance).to.be();
    });

    it('should have the property issue3charTokenFee (base name: "issue_3char_token_fee")', function() {
      // uncomment below and update the code to test the property issue3charTokenFee
      //var instane = new DexApiNodejs.InlineResponse20037Result();
      //expect(instance).to.be();
    });

    it('should have the property issue4charTokenFee (base name: "issue_4char_token_fee")', function() {
      // uncomment below and update the code to test the property issue4charTokenFee
      //var instane = new DexApiNodejs.InlineResponse20037Result();
      //expect(instance).to.be();
    });

    it('should have the property issue5charTokenFee (base name: "issue_5char_token_fee")', function() {
      // uncomment below and update the code to test the property issue5charTokenFee
      //var instane = new DexApiNodejs.InlineResponse20037Result();
      //expect(instance).to.be();
    });

    it('should have the property issue6charTokenFee (base name: "issue_6char_token_fee")', function() {
      // uncomment below and update the code to test the property issue6charTokenFee
      //var instane = new DexApiNodejs.InlineResponse20037Result();
      //expect(instance).to.be();
    });

  });

}));
