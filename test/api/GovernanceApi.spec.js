/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DexApiNodejs);
  }
}(this, function(expect, DexApiNodejs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DexApiNodejs.GovernanceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GovernanceApi', function() {
    describe('depositToProposal', function() {
      it('should call depositToProposal successfully', function(done) {
        //uncomment below and update the code to test depositToProposal
        //instance.depositToProposal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDepositByAddr', function() {
      it('should call getDepositByAddr successfully', function(done) {
        //uncomment below and update the code to test getDepositByAddr
        //instance.getDepositByAddr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDepositParameters', function() {
      it('should call getDepositParameters successfully', function(done) {
        //uncomment below and update the code to test getDepositParameters
        //instance.getDepositParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDeposits', function() {
      it('should call getDeposits successfully', function(done) {
        //uncomment below and update the code to test getDeposits
        //instance.getDeposits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProposalByID', function() {
      it('should call getProposalByID successfully', function(done) {
        //uncomment below and update the code to test getProposalByID
        //instance.getProposalByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProposals', function() {
      it('should call getProposals successfully', function(done) {
        //uncomment below and update the code to test getProposals
        //instance.getProposals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProposer', function() {
      it('should call getProposer successfully', function(done) {
        //uncomment below and update the code to test getProposer
        //instance.getProposer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTally', function() {
      it('should call getTally successfully', function(done) {
        //uncomment below and update the code to test getTally
        //instance.getTally(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTallyingParameters', function() {
      it('should call getTallyingParameters successfully', function(done) {
        //uncomment below and update the code to test getTallyingParameters
        //instance.getTallyingParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVoterByAddr', function() {
      it('should call getVoterByAddr successfully', function(done) {
        //uncomment below and update the code to test getVoterByAddr
        //instance.getVoterByAddr(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVoters', function() {
      it('should call getVoters successfully', function(done) {
        //uncomment below and update the code to test getVoters
        //instance.getVoters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVotingParameters', function() {
      it('should call getVotingParameters successfully', function(done) {
        //uncomment below and update the code to test getVotingParameters
        //instance.getVotingParameters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitCommunityPoolSpendProposal', function() {
      it('should call submitCommunityPoolSpendProposal successfully', function(done) {
        //uncomment below and update the code to test submitCommunityPoolSpendProposal
        //instance.submitCommunityPoolSpendProposal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitParameterChangeProposal', function() {
      it('should call submitParameterChangeProposal successfully', function(done) {
        //uncomment below and update the code to test submitParameterChangeProposal
        //instance.submitParameterChangeProposal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('submitProposal', function() {
      it('should call submitProposal successfully', function(done) {
        //uncomment below and update the code to test submitProposal
        //instance.submitProposal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('voteProposal', function() {
      it('should call voteProposal successfully', function(done) {
        //uncomment below and update the code to test voteProposal
        //instance.voteProposal(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
