/**
 * CET-Lite for CoinEx Chain
 * A REST interface for state queries, transaction generation and broadcasting.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CetLiteForCoinExChain);
  }
}(this, function(expect, CetLiteForCoinExChain) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CetLiteForCoinExChain.TendermintApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TendermintApi', function() {
    describe('getBlock', function() {
      it('should call getBlock successfully', function(done) {
        //uncomment below and update the code to test getBlock
        //instance.getBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLatestBlock', function() {
      it('should call getLatestBlock successfully', function(done) {
        //uncomment below and update the code to test getLatestBlock
        //instance.getLatestBlock(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLatestValidatorSet', function() {
      it('should call getLatestValidatorSet successfully', function(done) {
        //uncomment below and update the code to test getLatestValidatorSet
        //instance.getLatestValidatorSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNodeInfo', function() {
      it('should call getNodeInfo successfully', function(done) {
        //uncomment below and update the code to test getNodeInfo
        //instance.getNodeInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSyncing', function() {
      it('should call getSyncing successfully', function(done) {
        //uncomment below and update the code to test getSyncing
        //instance.getSyncing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getValidatorSet', function() {
      it('should call getValidatorSet successfully', function(done) {
        //uncomment below and update the code to test getValidatorSet
        //instance.getValidatorSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
