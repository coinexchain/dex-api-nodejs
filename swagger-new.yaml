---
swagger: "2.0"
info:
  version: "3.0"
  title: CET-Lite for CoinEx Chain
  description: A REST interface for state queries, transaction generation and broadcasting.
tags:
  - name: Transactions
    description: Search, encode, or broadcast transactions.
  - name: Tendermint
    description: Tendermint APIs, such as query blocks, transactions and validatorset
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Staking
    description: Stake module APIs
  - name: Governance
    description: Governance module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Fee distribution module APIs
  - name: Supply
    description: Supply module APIs
  - name: version
  - name: Misc
    description: Query app version
  - name: Asset
    description: Asset module APIs
  - name: Market
    description: Market module APIs
  - name: Comment
    description: Post comments about tokens
  - name: Alias
    description: Add and remove aliases for accounts
schemes:
  - https
  - http
host: dex-api.coinex.org
securityDefinitions:
  kms:
    type: basic
paths:
  /node_info:
    get:
      description: Information about the connected node
      summary: The properties of the connected node
      operationId: getNodeInfo
      tags:
        - Tendermint
      produces:
        - application/json
      responses:
        200:
          description: Node status
          schema:
            type: object
            properties:
              application_version:
                type: object
                properties:
                  build_tags:
                    type: string
                  client_name:
                    type: string
                  commit:
                    type: string
                  go:
                    type: string
                  name:
                    type: string
                  server_name:
                    type: string
                  version:
                    type: string
              node_info:
                type: object
                properties:
                  id:
                    type: string
                  moniker:
                    type: string
                    example: validator-name
                  protocol_version:
                    properties:
                      p2p:
                        type: string
                        example: 7
                      block:
                        type: string
                        example: 10
                      app:
                        type: string
                        example: 0
                  network:
                    type: string
                    example: gaia-2
                  channels:
                    type: string
                  listen_addr:
                    type: string
                    example: 192.168.56.1:26656
                  version:
                    description: Tendermint version
                    type: string
                    example: 0.15.0
                  other:
                    description: more information on versions
                    type: object
                    properties:
                      tx_index:
                        type: string
                        example: on
                      rpc_address:
                        type: string
                        example: tcp://0.0.0.0:26657
        500:
          description: Failed to query node status
  /syncing:
    get:
      operationId: getSyncing
      summary: Syncing state of node
      tags:
        - Tendermint
      description: Get if the node is currently syning with other nodes
      responses:
        200:
          description: '"true" or "false"'
        500:
          description: Server internal error
  /blocks/latest:
    get:
      summary: Get the latest block
      operationId: getLatestBlock
      tags:
        - Tendermint
      produces:
        - application/json
      responses:
        200:
          description: The latest block
          schema:
            $ref: "#/definitions/BlockQuery"
        500:
          description: Server internal error
  /blocks/{height}:
    get:
      operationId: getBlock
      summary: Get a block at a certain height
      tags:
        - Tendermint
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The block at a specific height
          schema:
            $ref: "#/definitions/BlockQuery"
        404:
          description: Request block height doesn't
        400:
          description: Invalid height
        500:
          description: Server internal error
  /validatorsets/latest:
    get:
      summary: Get the latest validator set
      operationId: getLatestValidatorSet
      tags:
        - Tendermint
      produces:
        - application/json
      responses:
        200:
          description: The validator set at the latest block height
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  block_height:
                    type: string
                  validators:
                    type: array
                    items:
                      $ref: "#/definitions/TendermintValidator"
        500:
          description: Server internal error
  /validatorsets/{height}:
    get:
      operationId: getValidatorSet
      summary: Get a validator set a certain height
      tags:
        - Tendermint
      produces:
        - application/json
      parameters:
        - in: path
          name: height
          description: Block height
          required: true
          type: number
          x-example: 1
      responses:
        200:
          description: The validator set at a specific block height
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                required:
                  - block_height
                  - validators
                properties:
                  block_height:
                    type: string
                  validators:
                    type: array
                    items:
                      $ref: "#/definitions/TendermintValidator"
                additionalProperties: false
        404:
          description: Block at height not available
        400:
          description: Invalid height
        500:
          description: Server internal error
  /txs/{hash}:
    get:
      summary: Get a Tx by hash
      operationId: getTxByHash
      tags:
        - Transactions
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
          x-example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
      responses:
        200:
          description: Tx with the provided hash
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        404:
          description: Tx not found
        500:
          description: Internal Server Error
  /txs:
    get:
      operationId: searchTx
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      produces:
        - application/json
      parameters:
        - in: query
          name: message.action
          type: string
          description: "transaction events such as 'message.action=send' which results in the following endpoint: 'GET /txs?message.action=send'"
          x-example: "send"
        - in: query
          name: message.sender
          type: string
          description: "transaction tags with sender: 'GET /txs?message.action=send&message.sender=cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv'"
          x-example: "cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv"
        - in: query
          name: page
          description: Page number
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          x-example: 1
      responses:
        200:
          description: All txs matching the provided events
          schema:
            $ref: "#/definitions/PaginatedQueryTxs"
        400:
          description: Invalid search events
        500:
          description: Internal Server Error
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      operationId: broadcastTx
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: txBroadcast
          description: The tx must be a signed StdTx. The supported broadcast modes include `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTxCore"
              mode:
                type: string
                example: block
      responses:
        200:
          description: Tx broadcasting result
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        500:
          description: Internal Server Error
  /txs/encode:
    post:
      tags:
        - Transactions
      summary: Encode a transaction to the Amino wire format
      description: Encode a transaction (signed or not) from JSON to base64-encoded Amino serialized bytes
      operationId: encodeTx
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tx
          description: The tx to encode
          required: true
          schema:
            type: object
            properties:
              tx:
                $ref: "#/definitions/StdTx"
      responses:
        200:
          description: The tx was successfully decoded and re-encoded
          schema:
            type: object
            properties:
              tx:
                type: string
                example: The base64-encoded Amino-serialized bytes for the tx
        400:
          description: The tx was malformated
        500:
          description: Server internal error
  /bank/balances/{address}:
    get:
      summary: Get the account balances
      operationId: getAddressBalances
      tags:
        - Bank
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: coinex16gdxm24ht2mxtpz9cma6tr6a6d47x63hlq4pxt
      responses:
        200:
          description: Account balances
          schema:
            type: object
            required:
              - height
              - result
            properties:
              height:
                type: string
              result:
                type: object
                required:
                  - coins
                  - locked_coins
                  - frozen_coins
                properties:
                  coins:
                    type: array
                    items:
                      $ref: "#/definitions/Coin"
                  locked_coins:
                    type: array
                    items:
                      $ref: "#/definitions/LockedCoin"
                    x-nullable: true
                  frozen_coins:
                    type: array
                    items:
                      $ref: "#/definitions/Coin"
                additionalProperties: false
            additionalProperties: false
        204:
          description: There is no data for the requested account
        500:
          description: Server internal error
  /bank/accounts/{address}/transfers:
    post:
      summary: Send coins from one account to another
      operationId: sendCoins
      tags:
        - Bank
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: coinex16gdxm24ht2mxtpz9cma6tr6a6d47x63hlq4pxt
        - in: body
          name: account
          description: The sender and tx information
          required: true
          schema:
            type: object
            required:
              - base_req
              - amount
              - unlock_time
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              unlock_time:
                type: string
                example: "675132000"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /bank/accounts/{address}/supervised_transfers:
    post:
      summary: Operate a supervised transfer
      operationId: transferSupervisedCoins
      tags:
        - Bank
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: coinex16gdxm24ht2mxtpz9cma6tr6a6d47x63hlq4pxt
        - in: body
          name: post_tx_body
          description: The sender and tx information
          required: true
          schema:
            type: object
            required:
              - base_req
              - amount
              - unlock_time
              - operation
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              amount:
                $ref: "#/definitions/Coin"
              unlock_time:
                type: string
                example: "675132000"
              sender:
                type: string
                description: "The supervised amount sender's address (required when return or unlock-by-supervisor)"
              supervisor:
                type: string
                description: "The supervisor's address (required when create or unlock-by-sender if there is a supervisor)"
              reward:
                type: string
                example: "1000000000"
              operation:
                type: integer
                example: 1
                description: "Operation type (create: 0; return: 1; unlock-by-sender: 2; unlock-by-supervisor: 3)"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /bank/accounts/memo:
    post:
      summary: Mark if memo is required to receive coins
      operationId: setMemoRequired
      tags:
        - Bank
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: account
          description: The mark
          required: true
          schema:
            type: object
            required:
              - base_req
              - memo_required
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              memo_required:
                type: boolean
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /auth/accounts/{address}:
    get:
      summary: Get the account information on blockchain
      operationId: getAccount
      tags:
        - Auth
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address
          required: true
          type: string
          x-example: coinex16gdxm24ht2mxtpz9cma6tr6a6d47x63hlq4pxt
      responses:
        200:
          description: Account information on the blockchain
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                required:
                  - address
                  - coins
                  - locked_coins
                  - frozen_coins
                  - public_key
                  - account_number
                  - sequence
                  - memo_required
                  - referee
                  - referee_change_time
                properties:
                  address:
                    type: string
                  coins:
                    type: array
                    items:
                      $ref: "#/definitions/Coin"
                  locked_coins:
                    type: array
                    items:
                      $ref: "#/definitions/LockedCoin"
                    x-nullable: true
                  frozen_coins:
                    type: array
                    items:
                      $ref: "#/definitions/Coin"
                    x-nullable: true
                  public_key:
                    $ref: "#/definitions/PublicKey"
                  account_number:
                    type: string
                  sequence:
                    type: string
                  memo_required:
                    type: boolean
                  referee:
                    type: string
                  referee_change_time:
                    type: string
                additionalProperties: false
        204:
          description: No content about this account address
        500:
          description: Server internel error
  /auth/accounts/{address}/referee:
    post:
      summary: Set referee for account
      operationId: setReferee
      tags:
        - Auth
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: Account address in bech32 format
          required: true
          type: string
          x-example: coinex16gdxm24ht2mxtpz9cma6tr6a6d47x63hlq4pxt
        - in: body
          name: referee
          description: Referee
          required: true
          schema:
            type: object
            required:
              - base_req
              - referee
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              referee:
                type: string
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /staking/delegators/{delegatorAddr}/delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get all delegations from a delegator
      operationId: getDelegations
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Submit delegation
      operationId: submitDelegation
      parameters:
        - in: body
          name: delegation
          description: submit delegation to provided validator
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_address:
                $ref: "#/definitions/ValidatorAddress"
              amount:
                $ref: "#/definitions/Coin"
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or delegation request body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      operationId: getDelegationsToValidator
      summary: Query the current delegation between a delegator and a validator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Delegation"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get all unbonding delegations from a delegator
      operationId: getUndelegationsOfDelegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/UnbondingDelegationPair"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Submit an unbonding delegation
      operationId: undelegate
      parameters:
        - in: body
          name: delegation
          description: The password of the account to remove from the KMS
          schema:
            type: object
            required:
              - base_req
              - delegator_address
              - validator_address
              - amount
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_address:
                $ref: "#/definitions/ValidatorAddress"
              amount:
                $ref: "#/definitions/Coin"
            additionalProperties: false
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or unbonding delegation request body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Query all unbonding delegations between a delegator and a validator
      operationId: getUndelegationsBetween
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/UnbondingDelegationPair"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/redelegations:
    parameters:
      - in: query
        name: delegator
        description: Bech32 AccAddress of Delegator
        required: false
        type: string
      - in: query
        name: validator_from
        description: Bech32 ValAddress of SrcValidator
        required: false
        type: string
      - in: query
        name: validator_to
        description: Bech32 ValAddress of DstValidator
        required: false
        type: string
    get:
      summary: Get all redelegations (filter by query params)
      operationId: getRedelegations
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Redelegation"
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/redelegations:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
    post:
      summary: Submit a redelegation
      operationId: submitRedelegation
      parameters:
        - in: body
          name: delegation
          description: The sender and tx information
          schema:
            type: object
            required:
              - base_req
              - delegator_address
              - validator_src_address
              - validator_dst_address
              - amount
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              delegator_address:
                $ref: "#/definitions/Address"
              validator_src_address:
                $ref: "#/definitions/ValidatorAddress"
              validator_dst_address:
                $ref: "#/definitions/ValidatorAddress"
              amount:
                $ref: "#/definitions/Coin"
            additionalProperties: false
      tags:
        - Staking
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid delegator address or redelegation request body
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/validators:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      operationId: getValidatorsOfDelegator
      summary: Query all validators that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
      - in: path
        name: validatorAddr
        description: Bech32 ValAddress of Delegator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      operationId: getValidatorOfDelegator
      summary: Query a validator that a delegator is bonded to
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Validator"
        400:
          description: Invalid delegator address or validator address
        500:
          description: Internal Server Error
  /staking/delegators/{delegatorAddr}/txs:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      operationId: getDelegatorTxs
      summary: Get all staking txs (i.e msgs) from a delegator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PaginatedQueryTxs"
        204:
          description: No staking transaction about this delegator address
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
  /staking/validators:
    get:
      summary: Get all validator candidates. By default it returns only the bonded validators.
      operationId: getValidators
      parameters:
        - in: query
          name: status
          type: string
          description: The validator bond status. Must be either 'bonded', 'unbonded', or 'unbonding'.
          x-example: bonded
        - in: query
          name: page
          description: The page number.
          type: integer
          x-example: 1
        - in: query
          name: limit
          description: The maximum number of items per page.
          type: integer
          x-example: 1
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Validator"
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Query the information from a single validator
      operationId: getValidator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Validator"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Get all delegations from a validator
      operationId: getDelegationsOfValidator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Delegation"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/validators/{validatorAddr}/unbonding_delegations:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Get all unbonding delegations from a validator
      operationId: getUndelegationsOfValidator
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/UnbondingDelegationPair"
                x-nullable: true
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /staking/pool:
    get:
      summary: Get the current state of the staking pool
      operationId: getStakingPool
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                required:
                  - not_bonded_tokens
                  - bonded_tokens
                  - non_bondable_tokens
                  - total_supply
                  - bonded_ratio
                properties:
                  not_bonded_tokens:
                    type: string
                  bonded_tokens:
                    type: string
                  non_bondable_tokens:
                    type: string
                  total_supply:
                    type: string
                  bonded_ratio:
                    type: string
                additionalProperties: false
        500:
          description: Internal Server Error
  /staking/parameters:
    get:
      summary: Get the current staking parameter values
      operationId: getStakingParameters
      tags:
        - Staking
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                required:
                  - max_entries
                  - unbonding_time
                  - max_validators
                  - bond_denom
                  - min_self_delegation
                  - min_mandatory_commission_rate
                properties:
                  max_entries:
                    type: integer
                  unbonding_time:
                    type: string
                  max_validators:
                    type: integer
                  bond_denom:
                    type: string
                  min_self_delegation:
                    type: string
                  min_mandatory_commission_rate:
                    type: string
                additionalProperties: false
        500:
          description: Internal Server Error
  /slashing/validators/{validatorPubKey}/signing_info:
    get:
      operationId: getSigningInfo
      summary: Get sign info of given validator
      description: Get sign info of given validator
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - type: string
          description: Bech32 validator public key
          name: validatorPubKey
          required: true
          in: path
          x-example: coinexvalconspub1zcjduepq7mft6gfls57a0a42d7uhx656cckhfvtrlmw744jv4q0mvlv0dypskehfk8
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/SigningInfo"
        204:
          description: No sign info of this validator
        400:
          description: Invalid validator public key
        500:
          description: Internal Server Error
  /slashing/signing_infos:
    get:
      operationId: getSigningInfos
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - in: query
          name: page
          description: Page number
          type: integer
          required: true
          x-example: 1
        - in: query
          name: limit
          description: Maximum number of items per page
          type: integer
          required: true
          x-example: 5
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/SigningInfo"
        400:
          description: Invalid validator public key for one of the validators
        500:
          description: Internal Server Error
  /slashing/validators/{validatorAddr}/unjail:
    post:
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      operationId: unjailValidator
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Slashing
      parameters:
        - type: string
          description: Bech32 validator address
          name: validatorAddr
          required: true
          in: path
          x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
        - description: ""
          name: UnjailBody
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid validator address or base_req
        500:
          description: Internal Server Error
  /slashing/parameters:
    get:
      operationId: getSlashingParams
      summary: Get the current slashing parameters
      tags:
        - Slashing
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                required:
                  - max_evidence_age
                  - signed_blocks_window
                  - min_signed_per_window
                  - double_sign_unbond_duration
                  - downtime_unbond_duration
                  - slash_fraction_double_sign
                  - slash_fraction_downtime
                properties:
                  max_evidence_age:
                    type: string
                  signed_blocks_window:
                    type: string
                  min_signed_per_window:
                    type: string
                  double_sign_unbond_duration:
                    type: string
                  downtime_unbond_duration:
                    type: string
                  slash_fraction_double_sign:
                    type: string
                  slash_fraction_downtime:
                    type: string
                additionalProperties: false
        500:
          description: Internal Server Error
  /gov/proposals:
    post:
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      operationId: submitProposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: valid value of `"proposal_type"` can be `"text"`, `"parameter_change"`, `"software_upgrade"`
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            required:
              - base_req
              - title
              - description
              - proposal_type
              - proposer
              - initial_deposit
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
              description:
                type: string
              proposal_type:
                type: string
                example: "text"
              proposer:
                $ref: "#/definitions/Address"
              initial_deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
    get:
      summary: Query proposals
      description: Query proposals information with parameters
      operationId: getProposals
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - in: query
          name: voter
          description: voter address
          required: false
          type: string
        - in: query
          name: depositor
          description: depositor address
          required: false
          type: string
        - in: query
          name: status
          description: proposal status, valid values can be `"deposit_period"`, `"voting_period"`, `"passed"`, `"rejected"`
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/TextProposal"
        400:
          description: Invalid query parameters
        500:
          description: Internal Server Error
  /gov/proposals/param_change:
    post:
      summary: Generate a parameter change proposal transaction
      description: Generate a parameter change proposal transaction
      operationId: submitParameterChangeProposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: The parameter change proposal body that contains all parameter changes
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            required:
              - base_req
              - title
              - description
              - proposal_type
              - proposer
              - deposit
              - changes
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
                x-example: "Param Change"
              description:
                type: string
                x-example: "Update max validators"
              proposal_type:
                type: string
                example: "text"
              proposer:
                $ref: "#/definitions/Address"
              deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              changes:
                type: array
                items:
                  $ref: "#/definitions/ParamChange"
            additionalProperties: false
      responses:
        200:
          description: The transaction was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
  /gov/proposals/community_pool_spend:
    post:
      summary: Generate a community pool spend proposal transaction
      description: Generate a community pool spend proposal transaction
      operationId: submitCommunityPoolSpendProposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - description: The community pool spend proposal body contains coin amount to be spent
          name: post_proposal_body
          in: body
          required: true
          schema:
            type: object
            required:
              - base_req
              - title
              - description
              - proposer
              - recipient
              - deposit
              - amount
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              title:
                type: string
                x-example: "Community Pool Spend"
              description:
                type: string
                x-example: "Pay me some coins"
              proposer:
                $ref: "#/definitions/Address"
              recipient:
                $ref: "#/definitions/Address"
              deposit:
                type: array
                items:
                  $ref: "#/definitions/Coin"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
            additionalProperties: false
      responses:
        200:
          description: The transaction was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid proposal body
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}:
    get:
      summary: Query a proposal
      description: Query a proposal by id
      operationId: getProposalByID
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: '1'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/TextProposal"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/proposer:
    get:
      summary: Query proposer
      description: Query for the proposer for a proposal
      operationId: getProposer
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Proposer"
        400:
          description: Invalid proposal ID
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits:
    get:
      summary: Query deposits
      description: Query deposits by proposalId
      operationId: getDeposits
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
    post:
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      operationId: depositToProposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - description: ""
          name: post_deposit_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              depositor:
                $ref: "#/definitions/Address"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal id or deposit body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      operationId: getDepositByAddr
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 depositor address
          name: depositor
          required: true
          in: path
          x-example: coinex1xl6453f6q6dv5770c9ue6hspdc0vxfuqtudkhz
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Deposit"
        400:
          description: Invalid proposal id or depositor address
        404:
          description: Found no deposit
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes:
    get:
      summary: Query voters
      description: Query voters information by proposalId
      operationId: getVoters
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
    post:
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      operationId: voteProposal
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - description: valid value of `"option"` field can be `"yes"`, `"no"`, `"no_with_veto"` and `"abstain"`
          name: post_vote_body
          in: body
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              voter:
                $ref: "#/definitions/Address"
              option:
                type: string
                example: "yes"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid proposal id or vote body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      operationId: getVoterByAddr
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
        - type: string
          description: Bech32 voter address
          name: voter
          required: true
          in: path
          x-example: coinex1qwl879nx9t6kef4supyazayf7vjhennyjqwjgr
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Vote"
        400:
          description: Invalid proposal id or voter address
        404:
          description: Found no vote
        500:
          description: Internal Server Error
  /gov/proposals/{proposalId}/tally:
    get:
      summary: Get a proposal's tally result at the current time
      description: Gets a proposal's tally result at the current time. If the proposal is pending deposits (i.e status 'DepositPeriod') it returns an empty tally result.
      operationId: getTally
      produces:
        - application/json
      tags:
        - Governance
      parameters:
        - type: string
          description: proposal id
          name: proposalId
          required: true
          in: path
          x-example: "2"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/TallyResult"
        400:
          description: Invalid proposal id
        500:
          description: Internal Server Error
  /gov/parameters/deposit:
    get:
      summary: Query governance deposit parameters
      description: Query governance deposit parameters. The max_deposit_period units are in nanoseconds.
      operationId: getDepositParameters
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  min_deposit:
                    type: array
                    items:
                      $ref: "#/definitions/Coin"
                  max_deposit_period:
                    type: string
                    example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no deposit parameters
        500:
          description: Internal Server Error
  /gov/parameters/tallying:
    get:
      summary: Query governance tally parameters
      description: Query governance tally parameters
      operationId: getTallyingParameters
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  threshold:
                    type: string
                    example: "0.5000000000"
                  veto:
                    type: string
                    example: "0.3340000000"
                  governance_penalty:
                    type: string
                    example: "0.0100000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no tally parameters
        500:
          description: Internal Server Error
  /gov/parameters/voting:
    get:
      summary: Query governance voting parameters
      description: Query governance voting parameters. The voting_period units are in nanoseconds.
      operationId: getVotingParameters
      produces:
        - application/json
      tags:
        - Governance
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  voting_period:
                    type: string
                    example: "86400000000000"
        400:
          description: <other_path> is not a valid query request path
        404:
          description: Found no voting parameters
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/rewards:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      summary: Get the total rewards balance from all delegations
      description: Get the sum of all the rewards earned by delegations by a single delegator
      operationId: getAllRewards
      produces:
        - application/json
      tags:
        - Distribution
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/DelegatorTotalRewards"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      operationId: withdrawAllRewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      operationId: getRewardByValidator
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Coin"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      operationId: withdrawRewardsByValidator
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator address or delegation body
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/delegators/{delegatorAddr}/withdraw_address:
    parameters:
      - in: path
        name: delegatorAddr
        description: Bech32 AccAddress of Delegator
        required: true
        type: string
        x-example: coinex167w96tdvmazakdwkw2u57227eduula2cy572lf
    get:
      operationId: getWithdrawAddress
      summary: Get the rewards withdrawal address
      description: Get the delegations' rewards withdrawal address. This is the address in which the user will receive the reward funds
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Address"
        400:
          description: Invalid delegator address
        500:
          description: Internal Server Error
    post:
      operationId: setWithdrawAddress
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              withdraw_address:
                $ref: "#/definitions/Address"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid delegator or withdraw address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      operationId: getDistributionInfo
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/ValidatorDistInfo"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      summary: Fee distribution outstanding rewards of a single validator
      operationId: getOutstandingRewards
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/validators/{validatorAddr}/rewards:
    parameters:
      - in: path
        name: validatorAddr
        description: Bech32 OperatorAddress of validator
        required: true
        type: string
        x-example: coinexvaloper1qwl879nx9t6kef4supyazayf7vjhennyh568ys
    get:
      operationId: getValidatorRewards
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Coin"
        400:
          description: Invalid validator address
        500:
          description: Internal Server Error
    post:
      operationId: withdrawAllValidatorRewards
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Withdraw request body
          schema:
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/BroadcastTxCommitResult"
        400:
          description: Invalid validator address
        401:
          description: Key password is wrong
        500:
          description: Internal Server Error
  /distribution/{accAddress}/donates:
    post:
      summary: Donate to the community pool
      description: Donate some amount of cet to the community pool
      operationId: donateToCommunityPool
      tags:
        - Distribution
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: accAddress
          description: Account address of the user
          required: true
          type: string
          x-example: coinex1628t2zxa9antj3qtkg7xj2m4t68uljqvyjqrup
        - in: body
          name: amount
          description: Amount of cet to donate
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              amount:
                type: array
                items:
                  $ref: "#/definitions/Coin"
      responses:
        200:
          description: Donate tx result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /distribution/community_pool:
    get:
      summary: Community pool parameters
      operationId: getCommunityPool
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Coin"
        500:
          description: Internal Server Error
  /distribution/parameters:
    get:
      operationId: getDistributionParams
      summary: Fee distribution parameters
      tags:
        - Distribution
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                properties:
                  base_proposer_reward:
                    type: string
                  bonus_proposer_reward:
                    type: string
                  community_tax:
                    type: string
        500:
          description: Internal Server Error
  /auth/parameters:
    get:
      operationId: getAuthParams
      summary: Get the current auth parameters
      tags:
        - Auth
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  max_memo_characters:
                    type: string
                  tx_sig_limit:
                    type: string
                  tx_size_cost_per_byte:
                    type: string
                  sig_verify_cost_ed25519:
                    type: string
                  sig_verify_cost_secp256k1:
                    type: string
                  min_gas_price_limit:
                    type: string
        500:
          description: Internal Server Error
  /bank/parameters:
    get:
      operationId: getBankParams
      summary: Get the current bankx parameters
      tags:
        - Bank
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  activation_fee:
                    type: string
                  lock_coins_fee:
                    type: string
        500:
          description: Internal Server Error
  /incentive/parameters:
    get:
      operationId: getIncentiveParams
      summary: Get the current incentive parameters
      tags:
        - Incentive
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  default_reward_per_block:
                    type: string
                  plans:
                    type: array
                    items:
                      type: object
                      properties:
                        start_height:
                          type: string
                        end_height:
                          type: string
                        reward_per_block:
                          type: string
                        total_incentive:
                          type: string
        500:
          description: Internal Server Error
  /asset/parameters:
    get:
      operationId: getAssetParams
      summary: Get the current asset parameters
      tags:
        - Asset
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  issue_token_fee:
                    type: string
                  issue_rare_token_fee:
                    type: string
                  issue_3char_token_fee:
                    type: string
                  issue_4char_token_fee:
                    type: string
                  issue_5char_token_fee:
                    type: string
                  issue_6char_token_fee:
                    type: string
        500:
          description: Internal Server Error
  /asset/tokens:
    post:
      tags:
        - Asset
      summary: Issue token
      description: Issue a new Token
      operationId: issueToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: tokenInfo
          description: the detail info about the Token to issue
          required: true
          schema:
            $ref: "#/definitions/IssueToken"
      responses:
        200:
          description: Token issuance result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
    get:
      tags:
        - Asset
      summary: List tokens
      description: List all existing tokens
      operationId: getTokenList
      produces:
        - application/json
      responses:
        200:
          description: All existing tokens
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Token"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}:
    get:
      tags:
        - Asset
      summary: queryToken
      description: Get token with provided `symbol`
      operationId: getToken
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
      responses:
        200:
          description: token with provided symbol
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Token"
        400:
          description: Invalid Request
        404:
          description: Tokens not found
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/ownerships:
    post:
      tags:
        - Asset
      summary: Transfer ownership
      description: Transfer token owner ship
      operationId: transferOwnership
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: newOwner
          description: transfer ownership to new owner
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              new_owner:
                $ref: "#/definitions/Address"
      responses:
        200:
          description: Token transfer ownership result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/mints:
    post:
      tags:
        - Asset
      summary: Mint token
      description: Mint mintable token
      operationId: mintToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: amount
          description: mint token amount
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              amount:
                type: string
      responses:
        200:
          description: Mint token result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/burns:
    post:
      tags:
        - Asset
      summary: Burn token
      description: Burn burnable token
      operationId: burnToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: amount
          description: burn token amount
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              amount:
                type: string
      responses:
        200:
          description: Burn token result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/forbids:
    post:
      tags:
        - Asset
      summary: Forbid token
      description: Forbid forbiddable token
      operationId: forbidToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: baseReq
          description: base req
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: Forbid token result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/unforbids:
    post:
      tags:
        - Asset
      summary: UnForbid token
      description: UnForbid forbiddable token
      operationId: unFrobidToken
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: baseReq
          description: base req
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
      responses:
        200:
          description: UnForbid token result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/forbidden/whitelist:
    get:
      tags:
        - Asset
      summary: queryWhitelist
      description: Get token whitelist with provided `symbol`
      operationId: getWhitelist
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
      responses:
        200:
          description: whitelist with provided symbol
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Address"
        404:
          description: Token not found
        500:
          description: Internal Server Error
    post:
      tags:
        - Asset
      summary: Add forbid whitelist
      description: Add forbiddable token whitelist addr
      operationId: addWhitelist
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: whitelist
          description: token whitelist addr
          required: true
          schema:
            $ref: "#/definitions/Whitelist"
      responses:
        200:
          description: Add forbid whitelist result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/unforbidden/whitelist:
    post:
      tags:
        - Asset
      summary: Remove forbid whitelist
      description: Remove forbiddable token whitelist addr
      operationId: removeWhitelist
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: whitelist
          description: token whitelist addr
          required: true
          schema:
            $ref: "#/definitions/Whitelist"
      responses:
        200:
          description: Remove forbid whitelist result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/forbidden/addresses:
    get:
      tags:
        - Asset
      summary: query forbidden addresses
      description: Get forbidden addresses with provided `symbol`
      operationId: getForbiddenAddresses
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
      responses:
        200:
          description: forbidden addresses with provided symbol
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/Address"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
    post:
      tags:
        - Asset
      summary: Forbid address
      description: Add forbidden addresses
      operationId: forbidAddr
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: addresses
          description: forbidden addresses
          required: true
          schema:
            $ref: "#/definitions/Addresses"
      responses:
        200:
          description: Forbid address result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/unforbidden/addresses:
    post:
      tags:
        - Asset
      summary: UnForbid address
      description: Remove forbidden addresses
      operationId: unForbidAddr
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: addresses
          description: un forbidden addresses
          required: true
          schema:
            $ref: "#/definitions/Addresses"
      responses:
        200:
          description: UnForbid address result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/reserved/symbols:
    get:
      tags:
        - Asset
      summary: List reserved symbols
      description: List all reserved symbols
      operationId: getReservedSymbols
      produces:
        - application/json
      responses:
        200:
          description: All reserved symbols
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: string
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /asset/tokens/{symbol}/infos:
    post:
      tags:
        - Asset
      summary: Modify token info
      description: Modify token info
      operationId: modifyTokenInfo
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: token symbol
          required: true
          type: string
          x-example: abc
        - in: body
          name: info
          description: new token info
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              url:
                type: string
              description:
                type: string
              identity:
                type: string
              name:
                type: string
              total_supply:
                type: string
              mintable:
                type: string
              burnable:
                type: string
              addr_forbiddable:
                type: string
              token_forbiddable:
                type: string
      responses:
        200:
          description: Modify token info result
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid Request
        500:
          description: Internal Server Error
  /market/parameters:
    get:
      operationId: getMarketParams
      summary: Get the current market parameters
      tags:
        - Market
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  create_market_fee:
                    type: string
                  fixed_trade_fee:
                    type: string
                  market_min_expired_time:
                    type: string
                  gte_order_lifetime:
                    type: string
                  gte_order_feature_fee_by_blocks:
                    type: string
                  max_executed_price_change_ratio:
                    type: string
                  market_fee_rate:
                    type: string
                  market_fee_min:
                    type: string
                  fee_for_zero_deal:
                    type: string
        500:
          description: Internal Server Error
  /market/gte-orders:
    post:
      summary: Create GTE order in blockchain
      tags:
        - Market
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createGteOrder
      parameters:
        - in: body
          name: orderInfo
          description: create order tx
          required: true
          schema:
            allOf:
              - type: object
                properties:
                  base_req:
                    $ref: "#/definitions/BaseReq"
                  exist_blocks:
                    type: string
                    example: "10000"
              - $ref: "#/definitions/Order"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /market/ioc-orders:
    post:
      summary: Create IOC order in blockchain
      tags:
        - Market
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createIocOrder
      parameters:
        - in: body
          name: orderInfo
          description: create order tx
          required: true
          schema:
            allOf:
              - type: object
                properties:
                  base_req:
                    $ref: "#/definitions/BaseReq"
              - $ref: "#/definitions/Order"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /market/trading-pairs:
    post:
      summary: Create trading-pair in blockchain
      tags:
        - Market
      consumes:
        - application/json
      produces:
        - application/json
      operationId: createTradingPair
      parameters:
        - in: body
          name: info
          description: Create trading-pair
          required: true
          schema:
            allOf:
              - type: object
                properties:
                  base_req:
                    $ref: "#/definitions/BaseReq"
              - $ref: "#/definitions/BaseMarket"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /market/price-precision:
    post:
      summary: Modify the price precision of the trading pair in the dex
      tags:
        - Market
      consumes:
        - application/json
      produces:
        - application/json
      operationId: modifyPricePrecision
      parameters:
        - in: body
          name: info
          description: trading-pair, price-precision as params
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              price_precision:
                type: string
                example: 10
              trading_pair:
                type: string
                example: etc/cet
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /market/exist-trading-pairs:
    get:
      summary: Query all trading-pair infos in blockchain
      tags:
        - Market
      consumes:
        - application/json
      produces:
        - application/json
      operationId: queryTradingPairs
      responses:
        200:
          description: All trading-pairs in blockchain
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/MarketInfos"
        400:
          description: Invalid request
        500:
          description: Server internal error

  /market/trading-pairs/{stock}/{money}:
    get:
      summary: Query trading-pair info
      tags:
        - Market
      produces:
        - application/json
      operationId: getTradingPair
      parameters:
        - in: path
          name: stock
          description: stock symbol
          required: true
          type: string
          x-example: btc
        - in: path
          name: money
          description: money symbol
          required: true
          type: string
          x-example: cet
      responses:
        200:
          description: trading-pair info of the specified symbol
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/MarketInfo"
        400:
          description: Invalid symbol
        500:
          description: Server internal error
  /market/orderbook/{stock}/{money}:
    get:
      summary: Query trading-pair's orderbook
      tags:
        - Market
      produces:
        - application/json
      operationId: getOrdersInMarket
      parameters:
        - in: path
          name: stock
          description: stock symbol
          required: true
          type: string
          x-example: btc
        - in: path
          name: money
          description: money symbol
          required: true
          type: string
          x-example: cet
      responses:
        200:
          description: orders in the specified trading-pair
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/OrderInfo"
        400:
          description: Invalid symbol
        500:
          description: Server internal error
  /market/orders/{order-id}:
    get:
      summary: Query order info
      tags:
        - Market
      produces:
        - application/json
      operationId: getOrder
      parameters:
        - in: path
          name: order-id
          description: The order id
          required: true
          type: string
          x-example: coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj
      responses:
        200:
          description: Order info of the specified id
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  type:
                    type: string
                  value:
                    $ref: "#/definitions/OrderInfo"
        400:
          description: Invalid order-id
        500:
          description: Server internal error
  /market/orders/account/{address}:
    get:
      summary: Query user order-id list
      tags:
        - Market
      produces:
        - application/json
      operationId: getOrders
      parameters:
        - in: path
          name: address
          description: The user address
          required: true
          type: string
          x-example: coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/Order-Ids"
        400:
          description: Invalid address
        500:
          description: Server internal error
  /market/cancel-order:
    post:
      summary: Cancel the order
      tags:
        - Market
      consumes:
        - application/json
      produces:
        - application/json
      operationId: cancelOrder
      parameters:
        - in: body
          name: orderInfo
          description: cancel order tx
          required: true
          schema:
            type: object
            required:
              - base_req
              - order_id
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              order_id:
                type: string
                example: coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj-1
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /market/cancel-trading-pair:
    post:
      summary: Cancel the trading-pair
      tags:
        - Market
      consumes:
        - application/json
      produces:
        - application/json
      operationId: cancelTradingPair
      parameters:
        - in: body
          name: info
          description: cancel trading-pair in dex
          required: true
          schema:
            type: object
            required:
              - base_req
              - trading_pair
              - time
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              trading_pair:
                type: string
                example: abc/cet
              time:
                type: string
                example: 7
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /alias/address-of-alias/{alias}:
    get:
      summary: Given an alias, query the corresponding address
      operationId: getAddressFromAlias
      tags:
        - Alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: alias
          description: The alias to be queried
          required: true
          type: string
          x-example: superman
      responses:
        200:
          description: The corresponding address. Emtpy string means no corresponding address was found.
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  type: string
                  x-example: coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj
        400:
          description: Invalid request
        500:
          description: Server internal error
  /alias/aliases-of-address/{address}:
    get:
      summary: Given an account's address, query all the corresponding aliases
      operationId: getAliasesFromAddress
      tags:
        - Alias
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: address
          description: The account's address to be queried
          required: true
          type: string
          x-example: coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj
      responses:
        200:
          description: An array of corresponding aliases. If there is a default alias, it will be the first item in the array; If there is no default alias, empty string will be the first item; If there is not any alias at all, the array will contain only an empty string.
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  type: string
                  example: superman
        400:
          description: Invalid request
        500:
          description: Server internal error
  /alias/update:
    post:
      summary: Add or remove alias for an address
      tags:
        - Alias
      consumes:
        - application/json
      produces:
        - application/json
      operationId: updateAlias
      parameters:
        - in: body
          name: aliasUpdateReq
          description: update an address's aliases
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              alias:
                type: string
                example: superman
              is_add:
                type: boolean
              as_default:
                type: boolean
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /alias/parameters:
    get:
      operationId: getAliasParams
      summary: Get the current alias parameters
      tags:
        - Alias
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  fee_for_alias_length_2:
                    type: string
                  fee_for_alias_length_3:
                    type: string
                  fee_for_alias_length_4:
                    type: string
                  fee_for_alias_length_5:
                    type: string
                  fee_for_alias_length_6:
                    type: string
                  fee_for_alias_length_7_or_higher:
                    type: string
                  max_alias_count:
                    type: string
        500:
          description: Internal Server Error
  /comment/new-thread:
    post:
      summary: Post a new comment to open a new thread
      tags:
        - Comment
      consumes:
        - application/json
      produces:
        - application/json
      operationId: newThread
      parameters:
        - in: body
          name: newThreadReq
          description: open a new thread
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              token:
                type: string
                example: cetdac
              donation:
                type: string
                example: 100000000
              title:
                type: string
                example: I love cetdac
              content:
                type: string
                example: This is the content. The end.
              content_type:
                type: integer
                example: 3
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /comment/followup-comment:
    post:
      summary: Post a follow-up comment under some thread
      tags:
        - Comment
      consumes:
        - application/json
      produces:
        - application/json
      operationId: followupComment
      parameters:
        - in: body
          name: followupCommentReq
          description: Post a follow-up comment
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              token:
                type: string
                example: cetdac
              donation:
                type: string
                example: 100000000
              title:
                type: string
                example: I love cetdac too
              content:
                type: string
                example: This is the content. The end.
              content_type:
                type: integer
                example: 3
              id_rewarded:
                type: string
                example: 9883409
              reward_target:
                type: string
                example: coinex1qwl879nx9t6kef4supyazayf7vjhennyjqwjgr
              reward_token:
                type: string
                example: cet
              reward_amount:
                type: string
                example: 200000000
              attitudes:
                type: array
                items:
                  type: integer
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /comment/reward-comments:
    post:
      summary: reward some comments with coins
      tags:
        - Comment
      consumes:
        - application/json
      produces:
        - application/json
      operationId: rewardComments
      parameters:
        - in: body
          name: rewardCommentsReq
          description: reward some comments
          required: true
          schema:
            type: object
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              token:
                type: string
                example: cetdac
              references:
                type: array
                items:
                  $ref: "#/definitions/CommentRef"
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /bancorlite/parameters:
    get:
      operationId: getBancorliteParams
      summary: Get the current bancorlite parameters
      tags:
        - Bancorlite
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: object
                properties:
                  create_bancor_fee:
                    type: string
                  cancel_bancor_fee:
                    type: string
                  trade_fee_rate:
                    type: string
        500:
          description: Internal Server Error
  /bancorlite/bancor-init:
    post:
      summary: create bancor
      tags:
        - Bancorlite
      consumes:
        - application/json
      produces:
        - application/json
      operationId: bancorInit
      parameters:
        - in: body
          name: bancorInit
          description: create bancor
          required: true
          schema:
            type: object
            required:
              - base_req
              - stock
              - money
              - init_price
              - max_supply
              - max_price
              - max_money
              - earliest_cancel_time
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              stock:
                type: string
                example: btc
              money:
                type: string
                example: cet
              init_price:
                type: string
                example: "10"
              max_supply:
                type: string
                example: "100000"
              stock_precision:
                type: string
                example: "0"
              max_price:
                type: string
                example: "100"
              max_money:
                type: string
                example: "100000"
              earliest_cancel_time:
                type: string
                example: "1564479501"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /bancorlite/bancor-trade:
    post:
      summary: trade with bancor
      tags:
        - Bancorlite
      consumes:
        - application/json
      produces:
        - application/json
      operationId: bancorTrade
      parameters:
        - in: body
          name: bancorTrade
          description: trade with bancor
          required: true
          schema:
            type: object
            required:
              - base_req
              - stock
              - money
              - amount
              - is_buy
              - money_limit
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              stock:
                type: string
                example: btc
              money:
                type: string
                example: cet
              amount:
                type: string
                example: "100"
              is_buy:
                type: boolean
                example: true
              money_limit:
                type: string
                example: "1000"
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /bancorlite/bancor-cancel:
    post:
      summary: cancel bancor
      tags:
        - Bancorlite
      consumes:
        - application/json
      produces:
        - application/json
      operationId: bancorCancel
      parameters:
        - in: body
          name: bancorCancel
          description: cancel bancor
          required: true
          schema:
            type: object
            required:
              - base_req
              - stock
              - money
            properties:
              base_req:
                $ref: "#/definitions/BaseReq"
              stock:
                type: string
                example: btc
              money:
                type: string
                example: cet
            additionalProperties: false
      responses:
        200:
          description: Tx was succesfully generated
          schema:
            $ref: "#/definitions/StdTx"
        400:
          description: Invalid request
        500:
          description: Server internal error
  /bancorlite/pools/{symbol}:
    get:
      summary: get the bancor pool info
      operationId: getBancorInfo
      tags:
        - Bancorlite
      produces:
        - application/json
      parameters:
        - in: path
          name: symbol
          description: stock and money pair
          required: true
          type: string
          x-example: btc-cet
      responses:
        200:
          description: bancor pool info
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                $ref: "#/definitions/BancorInfo"
            additionalProperties: false
        404:
          description: There is no corresponding bancor info
        500:
          description: Server internal error
  /bancorlite/infos:
    get:
      summary: get all bancor infos
      operationId: getBancorInfos
      tags:
        - Bancorlite
      produces:
        - application/json
      responses:
        200:
          description: bancor infos
          schema:
            type: object
            properties:
              height:
                type: string
              result:
                type: array
                items:
                  $ref: "#/definitions/BancorInfo"
                additionalProperties: false
        404:
          description: There is no bancor infos
        500:
          description: Server internal error
  /misc/height:
    get:
      tags:
        - Misc
      summary: Query least block info
      description: Query least block info
      operationId: queryLastBlock
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              height:
                type: integer
                format: int64
                example: 1565740
                description: Block height
              timestamp:
                type: integer
                format: int64
                example: 1577746413
                description: Block timestamp
        500:
          description: Server internal error
  /misc/block-times:
    get:
      tags:
        - Misc
      summary: Query block time
      description: Query the block time up to given height
      operationId: queryBlockTimes
      produces:
        - application/json
      parameters:
        - in: query
          name: height
          description: Block height
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: integer
              format: int64
              example: 1565740800
              description: Unix timestamp
        500:
          description: Server internal error
  /misc/donations:
    get:
      tags:
        - Misc
      summary: Query donations info
      description: Query donations by DonateToCommunityPool or CommentToken
      operationId: queryDonation
      produces:
        - application/json
      parameters:
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Donation'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /market/tickers:
    get:
      tags:
        - Market
      summary: Query market tickers
      description: Query tickers info
      operationId: queryTickers
      produces:
        - application/json
      parameters:
        - in: query
          name: market_list
          description: Market count limited to 1~100
          required: true
          type: array
          items:
            type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Tickers"
        500:
          description: Server internal error
  /market/depths:
    get:
      tags:
        - Market
      summary: Query market depth
      description: Query purchases and sales of a market at all price levels
      operationId: queryDepth
      produces:
        - application/json
      parameters:
        - in: query
          name: market
          description: stock/money
          required: true
          type: string
        - in: query
          name: count
          description: Querier count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              asks:
                type: array
                items:
                  $ref: "#/definitions/PricePoint"
              bids:
                type: array
                items:
                  $ref: "#/definitions/PricePoint"
        500:
          description: Server internal error
  /market/candle-sticks:
    get:
      tags:
        - Market
      summary: Query market candleStick
      description: Query candleStick until to given time
      operationId: queryCandleStick
      produces:
        - application/json
      parameters:
        - in: query
          name: market
          description: stock/money
          required: true
          type: string
        - in: query
          name: timespan
          description: 1min/1hour/1day
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier candleStick count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CandleStick'
        500:
          description: Server internal error
  /market/user-orders:
    get:
      tags:
        - Market
      summary: Query account's order
      description: Query account's order activities in all markets until to given time
      operationId: queryOrder
      produces:
        - application/json
      parameters:
        - in: query
          name: account
          description: Bech32 address
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier order count limited to 1024
          required: true
          type: integer
          format: int32
        - in: query
          name: token
          description: Symbol
          required: false
          type: string
        - in: query
          name: tag
          description: Filter responses type by tag string create/fill/cancel
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/UserOrder'
        500:
          description: Server internal error
  /market/deals:
    get:
      tags:
        - Market
      summary: Query market deal
      description: Query market deal until to given time
      operationId: queryDeal
      produces:
        - application/json
      parameters:
        - in: query
          name: market
          description: stock/money
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier deal count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/FillOrderInfo'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /bancorlite/deals:
    get:
      tags:
        - Bancor
      summary: Query bancor market deal
      description: Query bancor market deal until to given time
      operationId: queryBancorDeal
      produces:
        - application/json
      parameters:
        - in: query
          name: market
          description: B:stock/money
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier deal count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/BancorTrade'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /expiry/redelegations:
    get:
      tags:
        - Expiry
      summary: Query redelegation
      description: Query delegator's redelegation-completion info
      operationId: queryRedelegation
      produces:
        - application/json
      parameters:
        - in: query
          name: account
          description: Bech32 address
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Redelegation'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /expiry/unbondings:
    get:
      tags:
        - Expiry
      summary: Query Unbonding
      description: Query delegator's unbonding-completion info
      operationId: queryUnbonding
      produces:
        - application/json
      parameters:
        - in: query
          name: account
          description: Bech32 address
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Unbonding'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /expiry/lockeds:
    get:
      tags:
        - Expiry
      summary: Query lock tx
      description: Query lock transfer info
      operationId: querylocked
      produces:
        - application/json
      parameters:
        - in: query
          name: account
          description: Bech32 address
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count
          required: true
          type: integer
          format: int32
        - in: query
          name: token
          description: Symbol
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Locked'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /expiry/unlocks:
    get:
      tags:
        - Expiry
      summary: Query Unlock
      description: Query Unlock info
      operationId: queryUnlock
      produces:
        - application/json
      parameters:
        - in: query
          name: account
          description: Bech32 address
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count
          required: true
          type: integer
          format: int32
        - in: query
          name: token
          description: Symbol
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Unlock'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /tx/incomes:
    get:
      tags:
        - Tx
      summary: Query account all income until to given time
      description: Query income info
      operationId: queryIncome
      produces:
        - application/json
      parameters:
        - in: query
          name: account
          description: Bech32 address
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count limited to 1024
          required: true
          type: integer
          format: int32
        - in: query
          name: token
          description: Symbol
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Tx'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /tx/txs:
    get:
      tags:
        - Tx
      summary: Query transactions
      description: Query transactions signed by given account until to given time
      operationId: queryTx
      produces:
        - application/json
      parameters:
        - in: query
          name: account
          description: Bech32 address
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count limited to 1024
          required: true
          type: integer
          format: int32
        - in: query
          name: token
          description: Symbol
          required: false
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Tx'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /tx/txs/{hash}:
    get:
      summary: Get a Tx from trade server by hash
      operationId: getTxFromTradeServer
      tags:
        - Tx
      produces:
        - application/json
      parameters:
        - in: path
          name: hash
          description: Tx hash
          required: true
          type: string
          x-example: 2B6D7633C460DAABFCA47592B7F76A95CE95C52B515179C9E9BA49AA620377BA
      responses:
        200:
          description: Tx with the provided hash
          schema:
            $ref: '#/definitions/Tx'
        500:
          description: Internal Server Error
  /comment/comments:
    get:
      tags:
        - Comment
      summary: Query token comment
      description: Query all comments about given token until to time
      operationId: queryComment
      produces:
        - application/json
      parameters:
        - in: query
          name: token
          description: Symbol
          required: true
          type: string
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier comment count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Comment'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
  /slash/slashings:
    get:
      tags:
        - Slash
      summary: Query validator slash info
      description: Query validator slash power, reason, and jailed status etc
      operationId: querySlash
      produces:
        - application/json
      parameters:
        - in: query
          name: time
          description: Unix timestamp
          required: true
          type: integer
          format: int64
        - in: query
          name: sid
          description: Sequence id
          required: true
          type: integer
          format: int64
        - in: query
          name: count
          description: Querier count limited to 1024
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Slash'
              timesid:
                type: array
                items:
                  type: integer
                  format: int64
                  description: Timesid entry are in pairs, a count correspond two entry(time,sid)
        500:
          description: Server internal error
definitions:
  BancorInfo:
    type: object
    required:
      - owner
      - stock
      - money
      - init_price
      - max_supply
      - max_price
      - max_money
      - ar
      - current_price
      - stock_in_pool
      - money_in_pool
      - earliest_cancel_time
    properties:
      owner:
        type: string
      stock:
        type: string
      money:
        type: string
      init_price:
        type: string
      max_supply:
        type: string
      stock_precision:
        type: string
      max_price:
        type: string
      max_money:
        type: string
      ar:
        type: string
      current_price:
        type: string
      stock_in_pool:
        type: string
      money_in_pool:
        type: string
      earliest_cancel_time:
        type: string
  BaseMarket:
    type: object
    required:
      - stock
      - money
      - price_precision
    properties:
      stock:
        type: string
        example: "abc"
      money:
        type: string
        example: "cet"
      price_precision:
        type: string
        example: "10"
        description: "The trading-pair price precision, used to control the price accuracy of the order when token trades, valid range [0, 18]"
      order_precision:
        type: string
        example: "0"
        description: "To control the granularity of token trade, the token amount of trade must be a multiple of granularity."
  MarketInfo:
    allOf:
      - $ref: "#/definitions/BaseMarket"
      - type: object
        properties:
          last_executed_price:
            type: string
            example: "0.00002"
          creator:
            type: string
            example: "coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj"
  MarketInfos:
    type: array
    items:
      $ref: "#/definitions/MarketInfo"
  Order:
    type: object
    required:
      - order_type
      - trading_pair
      - price
      - quantity
      - side
      - identify
    properties:
      order_type:
        type: integer
        example: "2"
        description: "The identify of the price limit : 2; (Currently, only price limit orders are supported)"
      trading_pair:
        type: string
        example: "abc/cet"
      price_precision:
        type: string
        example: "9"
      price:
        type: string
        example: "1000"
      quantity:
        type: string
        example: "12320"
      side:
        type: integer
        example: "1"
        description: "The buying or selling direction of an order.(buy : 1; sell : 2)"
      identify:
        type: integer
        example: "1"
        description: "A transaction can contain multiple order creation messages, the identify field was
         added to the order creation message to give each order a unique ID. So the order ID consists of
          user address, user sequence, identify."

  OrderInfo:
    type: object
    allOf:
      - $ref: "#/definitions/Order"
      - properties:
          sender:
            type: string
            example: coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj
          sequence:
            type: string
            example: 8
          time_in_force:
            type: string
            example: 1
          height:
            type: string
            example: 10
          frozen_fee:
            type: string
            example: 100
          left_stock:
            type: string
            example: 100
          freeze:
            type: string
            example: 100
          DealStock:
            type: string
            example: 100
          DealMoney:
            type: string
            example: 100

  Order-Ids:
    type: array
    items:
      type: string
      example: coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj-1
  CheckTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 0
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""
  DeliverTxResult:
    type: object
    properties:
      code:
        type: integer
      data:
        type: string
      gas_used:
        type: integer
      gas_wanted:
        type: integer
      info:
        type: string
      log:
        type: string
      tags:
        type: array
        items:
          $ref: "#/definitions/KVPair"
    example:
      code: 5
      data: data
      log: log
      gas_used: 5000
      gas_wanted: 10000
      info: info
      tags:
        - ""
        - ""

  BroadcastTxCommitResult:
    type: object
    properties:
      height:
        type: string
      txhash:
        $ref: "#/definitions/Hash"
      code:
        type: integer
      data:
        type: string
      raw_log:
        type: string
      logs:
        type: array
        items:
          type: object
          properties:
            msg_index:
              type: integer
            success:
              type: boolean
            log:
              type: string
      info:
        type: string
      gas_wanted:
        type: string
      gas_used:
        type: string
      events:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
            attributes:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
      codespace:
        type: string
      tx:
        type: object
      timestamp:
        type: string
  KVPair:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Msg:
    type: object
  Address:
    type: string
    description: bech32 encoded address
    example: coinex1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
  ValidatorAddress:
    type: string
    description: bech32 encoded address
    example: coinexvaloper1depk54cuajgkzea6zpgkq36tnjwdzv4avv9cxd
  Coin:
    type: object
    required:
      - denom
      - amount
    properties:
      denom:
        type: string
        example: stake
      amount:
        type: string
        example: "50"
    additionalProperties: false
  LockedCoin:
    type: object
    required:
      - coin
      - unlock_time
    properties:
      coin:
        $ref: "#/definitions/Coin"
      unlock_time:
        type: string
        example: "1559549834"
      from_address:
        type: string
        example: "coinex1y5kdxnzn2tfwayyntf2n28q8q2s80mcul852ke"
      supervisor:
        type: string
        example: "coinex1dmz7e2fddhejdz5n7e3qc5szx3zn2gj3ta8rwj"
      reward:
        type: string
        example: "0"
    additionalProperties: false
  Hash:
    type: string
    example: EE5F3404034C524501629B56E0DDC38FAD651F04
  TxQuery:
    type: object
    properties:
      hash:
        type: string
      height:
        type: string
      tx:
        $ref: "#/definitions/StdTx"
      result:
        type: object
        properties:
          logs:
            type: string
          gas_wanted:
            type: string
            example: "0"
          gas_used:
            type: string
            example: "0"
          tags:
            type: array
            items:
              $ref: "#/definitions/KVPair"
  PaginatedQueryTxs:
    type: object
    required:
      - total_count
      - count
      - page_number
      - page_total
      - limit
      - txs
    properties:
      total_count:
        type: number
        example: 1
      count:
        type: number
        example: 1
      page_number:
        type: number
        example: 1
      page_total:
        type: number
        example: 1
      limit:
        type: number
        example: 30
      txs:
        type: array
        items:
          $ref: "#/definitions/TxQuery"
    additionalProperties: false
  StdTxCore:
    type: object
    required:
      - fee
      - memo
      - signatures
    properties:
      msg:
        type: array
        items:
          $ref: "#/definitions/Msg"
      fee:
        type: object
        properties:
          gas:
            type: string
          amount:
            type: array
            items:
              $ref: "#/definitions/Coin"
      memo:
        type: string
      signatures:
        type: array
        items:
          type: object
          properties:
            signature:
              type: string
              example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
            pub_key:
              type: object
              properties:
                type:
                  type: string
                  example: "tendermint/PubKeySecp256k1"
                value:
                  type: string
                  example: "Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH"
        x-nullable: true

  StdTx:
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
      value:
        $ref: "#/definitions/StdTxCore"

  KeyOutput:
    type: object
    properties:
      name:
        type: string
        example: Main Account
      address:
        type: string
        example: coinex1y5kdxnzn2tfwayyntf2n28q8q2s80mcul852ke
      pub_key:
        type: string
        example: "coinexpub1addwnpepqdnj3shrcsjxjfp027lh6szyrrmvwxace6frplg30e9ngtflzpr5ut4wmke"
      type:
        type: string
        example: local
      seed:
        type: string
  BlockID:
    type: object
    required:
      - hash
      - parts
    properties:
      hash:
        $ref: "#/definitions/Hash"
      parts:
        type: object
        properties:
          total:
            type: number
            example: 0
          hash:
            $ref: "#/definitions/Hash"
    additionalProperties: false
  BlockHeader:
    type: object
    required:
      - chain_id
      - height
      - time
      - num_txs
      - last_block_id
      - total_txs
      - last_commit_hash
      - data_hash
      - validators_hash
      - next_validators_hash
      - consensus_hash
      - app_hash
      - last_results_hash
      - evidence_hash
      - proposer_address
      - version
    properties:
      chain_id:
        type: string
        example: coinexchain-2
      height:
        type: number
        example: 1
      time:
        type: string
        example: "2017-12-30T05:53:09.287+01:00"
      num_txs:
        type: number
        example: 0
      last_block_id:
        $ref: "#/definitions/BlockID"
      total_txs:
        type: number
        example: 35
      last_commit_hash:
        $ref: "#/definitions/Hash"
      data_hash:
        $ref: "#/definitions/Hash"
      validators_hash:
        $ref: "#/definitions/Hash"
      next_validators_hash:
        $ref: "#/definitions/Hash"
      consensus_hash:
        $ref: "#/definitions/Hash"
      app_hash:
        $ref: "#/definitions/Hash"
      last_results_hash:
        $ref: "#/definitions/Hash"
      evidence_hash:
        $ref: "#/definitions/Hash"
      proposer_address:
        $ref: "#/definitions/Address"
      version:
        type: object
        properties:
          block:
            type: string
            example: 10
          app:
            type: string
            example: 0
    additionalProperties: false
  Block:
    type: object
    properties:
      header:
        $ref: "#/definitions/BlockHeader"
      txs:
        type: array
        items:
          type: string
      evidence:
        type: object
        properties:
          evidence:
            type: array
            items:
              type: string
      last_commit:
        type: object
        properties:
          block_id:
            $ref: "#/definitions/BlockID"
          precommits:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                validator_index:
                  type: string
                  example: "0"
                height:
                  type: string
                  example: "0"
                round:
                  type: string
                  example: "0"
                timestamp:
                  type: string
                  example: "2017-12-30T05:53:09.287+01:00"
                type:
                  type: number
                  example: 2
                block_id:
                  $ref: "#/definitions/BlockID"
                signature:
                  type: string
                  example: "7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ=="
  BlockQuery:
    type: object
    properties:
      block_meta:
        type: object
        properties:
          header:
            $ref: "#/definitions/BlockHeader"
          block_id:
            $ref: "#/definitions/BlockID"
      block:
        $ref: "#/definitions/Block"
  DelegationDelegatorReward:
    type: object
    required:
      - validator_address
      - reward
    properties:
      validator_address:
        $ref: "#/definitions/ValidatorAddress"
      reward:
        type: array
        items:
          $ref: "#/definitions/Coin"
        x-nullable: true
    additionalProperties: false
  DelegatorTotalRewards:
    type: object
    required:
      - rewards
      - total
    properties:
      rewards:
        type: array
        items:
          $ref: "#/definitions/DelegationDelegatorReward"
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
        x-nullable: true
    additionalProperties: false
  BaseReq:
    type: object
    properties:
      from:
        type: string
        example: "coinex1y5kdxnzn2tfwayyntf2n28q8q2s80mcul852ke"
        description: Sender address or Keybase name to generate a transaction
      memo:
        type: string
        example: "Sent with example memo"
      chain_id:
        type: string
        example: "coinex-chain-1"
      account_number:
        type: string
        example: "0"
      sequence:
        type: string
        example: "1"
      gas:
        type: string
        example: "200000"
      gas_adjustment:
        type: string
        example: "1.2"
      fees:
        type: array
        items:
          $ref: "#/definitions/Coin"
      simulate:
        type: boolean
        example: false
        description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
  TendermintValidator:
    type: object
    required:
      - address
      - pub_key
      - voting_power
      - proposer_priority
    properties:
      address:
        $ref: "#/definitions/ValidatorAddress"
      pub_key:
        type: string
        example: coinexvalconspub1zcjduepq7sjfglw7ra4mjxpw4ph7dtdhdheh7nz8dfgl6t8u2n5szuuql9mqsrwquu
      voting_power:
        type: string
        example: "1000"
      proposer_priority:
        type: string
        example: "1000"
    additionalProperties: false
  TextProposal:
    type: object
    required:
      - id
      - content
      - deposit_end_time
      - voting_end_time
      - proposal_status
      - final_tally_result
      - submit_time
      - total_deposit
      - voting_start_time
    properties:
      id:
        type: string
      content:
        type: object
        properties:
          type:
            type: string
          value:
            type: object
            properties:
              description:
                type: string
              title:
                type: string
      deposit_end_time:
        type: string
      proposal_status:
        type: string
      final_tally_result:
        $ref: "#/definitions/TallyResult"
      submit_time:
        type: string
      total_deposit:
        type: array
        items:
          $ref: "#/definitions/Coin"
      voting_start_time:
        type: string
      voting_end_time:
        type: string
    additionalProperties: false
  Proposer:
    type: object
    required:
      - proposal_id
      - proposer
    properties:
      proposal_id:
        type: string
      proposer:
        type: string
    additionalProperties: false
  Deposit:
    type: object
    required:
      - amount
      - proposal_id
      - depositor
    properties:
      amount:
        type: array
        items:
          $ref: "#/definitions/Coin"
      proposal_id:
        type: string
      depositor:
        $ref: "#/definitions/Address"
    additionalProperties: false
  TallyResult:
    type: object
    required:
      - 'yes'
      - abstain
      - 'no'
      - no_with_veto
    properties:
      'yes':
        type: string
        example: "0.0000000000"
      abstain:
        type: string
        example: "0.0000000000"
      'no':
        type: string
        example: "0.0000000000"
      no_with_veto:
        type: string
        example: "0.0000000000"
    additionalProperties: false
  Vote:
    type: object
    required:
      - voter
      - proposal_id
      - option
    properties:
      voter:
        type: string
      proposal_id:
        type: string
      option:
        type: string
    additionalProperties: false
  Validator:
    type: object
    required:
      - operator_address
      - consensus_pubkey
      - jailed
      - status
      - tokens
      - delegator_shares
      - description
      - unbonding_height
      - unbonding_time
      - commission
      - min_self_delegation
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      consensus_pubkey:
        type: string
        example: coinexvalconspub1zcjduepq7sjfglw7ra4mjxpw4ph7dtdhdheh7nz8dfgl6t8u2n5szuuql9mqsrwquu
      jailed:
        type: boolean
      status:
        type: integer
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        required:
          - moniker
          - identity
          - website
          - details
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          details:
            type: string
        additionalProperties: false
      unbonding_height:
        type: string
        example: "0"
      unbonding_time:
        type: string
        example: "1970-01-01T00:00:00Z"
      commission:
        type: object
        required:
          - commission_rates
          - update_time
        properties:
          commission_rates:
            type: object
            required:
              - rate
              - max_rate
              - max_change_rate
            properties:
              rate:
                type: string
                example: "0"
              max_rate:
                type: string
                example: "0"
              max_change_rate:
                type: string
                example: "0"
            additionalProperties: false
          update_time:
            type: string
            example: "1970-01-01T00:00:00Z"
        additionalProperties: false
      min_self_delegation:
        type: string
    additionalProperties: false
  Delegation:
    type: object
    required:
      - delegator_address
      - validator_address
      - shares
      - balance
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      shares:
        type: string
      balance:
        type: string
    additionalProperties: false
  UnbondingDelegationPair:
    type: object
    required:
      - delegator_address
      - validator_address
      - entries
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/UnbondingEntries"
    additionalProperties: false
  UnbondingEntries:
    type: object
    required:
      - initial_balance
      - balance
      - creation_height
      - completion_time
    properties:
      initial_balance:
        type: string
      balance:
        type: string
      creation_height:
        type: string
      completion_time:
        type: string
    additionalProperties: false
  Redelegation:
    type: object
    required:
      - delegator_address
      - validator_src_address
      - validator_dst_address
      - entries
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          $ref: "#/definitions/RedelegationEntry"
    additionalProperties: false
  RedelegationEntry:
    type: object
    required:
      - creation_height
      - completion_time
      - initial_balance
      - shares_dst
      - balance
    properties:
      creation_height:
        type: integer
      completion_time:
        type: string
      initial_balance:
        type: string
      shares_dst:
        type: string
      balance:
        type: string
    additionalProperties: false
  ValidatorDistInfo:
    type: object
    required:
      - operator_address
      - self_bond_rewards
      - val_commission
    properties:
      operator_address:
        $ref: "#/definitions/ValidatorAddress"
      self_bond_rewards:
        type: array
        items:
          $ref: "#/definitions/Coin"
        x-nullable: true
      val_commission:
        type: array
        items:
          $ref: "#/definitions/Coin"
        x-nullable: true
    additionalProperties: false
  PublicKey:
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
      value:
        type: string
    additionalProperties: false
  SigningInfo:
    type: object
    required:
      - start_height
      - index_offset
      - jailed_until
      - missed_blocks_counter
    properties:
      start_height:
        type: string
      index_offset:
        type: string
      jailed_until:
        type: string
      missed_blocks_counter:
        type: string
    additionalProperties: false
  ParamChange:
    type: object
    required:
      - subspace
      - key
      - subkey
      - value
    properties:
      subspace:
        type: string
        example: "staking"
      key:
        type: string
        example: "MaxValidators"
      subkey:
        type: string
        example: ""
      value: {}
    additionalProperties: false
  Supply:
    type: object
    properties:
      total:
        type: array
        items:
          $ref: "#/definitions/Coin"
  IssueToken:
    type: object
    required:
      - base_req
      - name
      - symbol
      - total_supply
      - mintable
      - burnable
      - addr_forbiddable
      - token_forbiddable
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      name:
        type: string
        example: "ABC Token"
      symbol:
        type: string
        example: "abc"
      total_supply:
        type: string
        example: "2000000000000000"
      owner:
        $ref: "#/definitions/Address"
      mintable:
        type: boolean
        example: false
      burnable:
        type: boolean
        example: true
      addr_forbiddable:
        type: boolean
        example: false
      token_forbiddable:
        type: boolean
        example: false
      url:
        type: string
        example: "www.abc.org"
      description:
        type: string
        example: "token abc is a example token"
      identity:
        type: string
    additionalProperties: false
  Token:
    type: object
    required:
      - type
      - value
    properties:
      type:
        type: string
        example: "asset/BaseToken"
      value:
        type: object
        required:
          - name
          - symbol
          - total_supply
          - mintable
          - burnable
          - addr_forbiddable
          - token_forbiddable
          - send_lock
          - total_burn
          - total_mint
          - is_forbidden
        properties:
          name:
            type: string
            example: "ABC Token"
          symbol:
            type: string
            example: "abc"
          total_supply:
            type: string
            example: "2000000000000000"
          owner:
            $ref: "#/definitions/Address"
          mintable:
            type: boolean
            example: false
          burnable:
            type: boolean
            example: true
          addr_forbiddable:
            type: boolean
            example: false
          token_forbiddable:
            type: boolean
            example: false
          url:
            type: string
            example: "www.abc.org"
          description:
            type: string
            example: "token abc is a example token"
          identity:
            type: string
          send_lock:
            type: string
            example: "0"
          total_burn:
            type: string
            example: "0"
          total_mint:
            type: string
            example: "0"
          is_forbidden:
            type: boolean
            example: false
        additionalProperties: false
    additionalProperties: false
  Addresses:
    type: object
    required:
      - base_req
      - addresses
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      addresses:
        type: array
        items:
          $ref: "#/definitions/Address"
    additionalProperties: false
  Whitelist:
    type: object
    required:
      - base_req
      - whitelist
    properties:
      base_req:
        $ref: "#/definitions/BaseReq"
      whitelist:
        type: array
        items:
          $ref: "#/definitions/Address"
    additionalProperties: false
  CommentRef:
    type: object
    required:
      - id
      - reward_target
      - reward_token
      - reward_amount
      - attitudes
    properties:
      id:
        type: string
        example: 9883409
      reward_target:
        type: string
        example: coinex1qwl879nx9t6kef4supyazayf7vjhennyjqwjgr
      reward_token:
        type: string
        example: cet
      reward_amount:
        type: string
        example: 200000000
      attitudes:
        type: array
        items:
          type: integer
  Tickers:
    type: object
    properties:
      market:
        type: string
        example: "abc/cet"
      new:
        type: string
        example: "0"
        description: Newest price
      old:
        type: string
        example: "0"
        description: Old price one day ago
  PricePoint:
    type: object
    properties:
      price:
        type: string
        example: "0"
        description: Price of depth without precision consolidation
      amount:
        type: string
        example: "0"
        description: Amount of all the unfilled orders
  CandleStick:
    type: object
    properties:
      open:
        type: string
        example: "0"
        description: open price
      close:
        type: string
        example: "0"
        description: close price
      high:
        type: string
        example: "0"
        description: high price
      low:
        type: string
        example: "0"
        description: low price
      total:
        type: string
        example: "0"
        description: total deal
      unix_time:
        type: integer
        format: int64
        example: 1565740800
        description: ending unix time
      time_span:
        type: integer
        format: uint8
        example: 16
        description: Minute:16/Hour:32/Day:48
      market:
        type: string
        example: abc/cet
  UserOrder:
    type: object
    properties:
      createOrderInfo:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/definitions/CreateOrderInfo'
          timesid:
            type: array
            items:
              type: integer
              format: int64
              description: Timesid entry are in pairs, a count correspond two entry(time,sid)
      fillOrderInfo:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/definitions/FillOrderInfo'
          timesid:
            type: array
            items:
              type: integer
              format: int64
              description: Timesid entry are in pairs, a count correspond two entry(time,sid)
      cancelOrderInfo:
        type: object
        properties:
          data:
            type: array
            items:
              $ref: '#/definitions/CancelOrderInfo'
          timesid:
            type: array
            items:
              type: integer
              format: int64
              description: Timesid entry are in pairs, a count correspond two entry(time,sid)
  CreateOrderInfo:
    type: object
    properties:
      order_id:
        type: string
        example: "coinex1nv3ghvdnpgc28mvjfkyrle5ccx0m3vesqp8tdx-1"
      sender:
        $ref: '#/definitions/Address'
      trading_pair:
        type: string
        example: "abc/cet"
      order_type:
        type: integer
        format: byte
        example: 2
        description: Limited value 2
      price:
        type: string
        example: "0"
      quantity:
        type: integer
        format: int64
        example: 0
      side:
        type: integer
        format: byte
        example: 1
        description: BUY:1/SELL:2
      time_in_force:
        type: integer
        format: int32
        example: 3
        description: GTE:3/IOC:4
      feature_fee:
        type: integer
        format: int64
        example: 0
        description: Order feature fee, sato.CET as the unit
      height:
        type: integer
        format: int64
        example: 0
      frozen_fee:
        type: integer
        format: int64
        example: 0
        description: Order frozen fee, sato.CET as the unit
      freeze:
        type: integer
        format: int64
        example: 0
        description: Freeze sato.CET amount
      tx_hash:
        type: string
        description: The tx hash
  FillOrderInfo:
    type: object
    properties:
      order_id:
        type: string
        example: "coinex1nv3ghvdnpgc28mvjfkyrle5ccx0m3vesqp8tdx-1"
      trading_pair:
        type: string
        example: "abc/cet"
      height:
        type: integer
        format: int64
        example: 0
      side:
        type: integer
        format: byte
        example: 1
        description: BUY:1/SELL:2
      price:
        type: string
        example: "0"
      left_stock:
        type: integer
        format: int64
        example: 0
        description: Order left stock
      freeze:
        type: integer
        format: int64
        example: 0
        description: Freeze sato.CET amount
      deal_stock:
        type: integer
        format: int64
        example: 0
        description: Order accumulated deal stock amount
      deal_money:
        type: integer
        format: int64
        example: 0
        description: Order accumulated deal money amount
      curr_stock:
        type: integer
        format: int64
        example: 0
        description: Current block deal stock amount
      curr_money:
        type: integer
        format: int64
        example: 0
        description: Current block deal money amount
  CancelOrderInfo:
    type: object
    properties:
      order_id:
        type: string
        example: "coinex1nv3ghvdnpgc28mvjfkyrle5ccx0m3vesqp8tdx-1"
      trading_pair:
        type: string
        example: "abc/cet"
      height:
        type: integer
        format: int64
        example: 0
      side:
        type: integer
        format: byte
        example: 1
        description: BUY:1/SELL:2
      price:
        type: string
        example: "0"
      del_reason:
        type: string
        example: "cancel order reason"
      used_commission:
        type: integer
        format: int64
        example: 0
        description: Order used commission
      left_stock:
        type: integer
        format: int64
        example: 0
      remain_amount:
        type: integer
        format: int64
        example: 0
      deal_stock:
        type: integer
        format: int64
        example: 0
      deal_money:
        type: integer
        format: int64
        example: 0
      tx_hash:
        type: string
        description: The tx hash
  BancorTrade:
    type: object
    properties:
      sender:
        $ref: '#/definitions/Address'
      stock:
        type: string
        example: "abc"
      money:
        type: string
        example: "cet"
      amount:
        type: integer
        format: int64
        example: 0
      side:
        type: integer
        format: byte
        example: 1
        description: BUY:1/SELL:2
      money_limit:
        type: integer
        format: int64
        example: 0
      transaction_price:
        type: string
        example: "0"
      block_height:
        type: integer
        format: int64
        example: 0
      tx_hash:
        type: string
        description: The tx hash
  Unbonding:
    type: object
    properties:
      delegator:
        $ref: '#/definitions/Address'
      validator:
        $ref: '#/definitions/Address'
      amount:
        type: string
        example: "0"
      completion_time:
        type: string
        example: "0"
      tx_hash:
        type: string
        description: The tx hash
  Unlock:
    type: object
    properties:
      address:
        $ref: '#/definitions/Address'
      unlocked:
        type: array
        items:
          $ref: '#/definitions/Coin'
      locked_coins:
        type: array
        items:
          $ref: "#/definitions/LockedCoin"
      frozen_coins:
        type: array
        items:
          $ref: '#/definitions/Coin'
      coins:
        type: array
        items:
          $ref: '#/definitions/Coin'
      height:
        type: integer
        format: int64
        example: 0
  TransferRecord:
    type: object
    properties:
      sender:
        $ref: '#/definitions/Address'
      recipient:
        $ref: '#/definitions/Address'
      amount:
        type: string
        example: "0"
  Tx:
    type: object
    properties:
      signers:
        type: array
        items:
          $ref: '#/definitions/Address'
      transfers:
        type: array
        items:
          $ref: '#/definitions/TransferRecord'
      serial_number:
        type: integer
        format: int64
        example: 0
        description: Tx global serial number
      msg_types:
        type: array
        items:
          type: string
          example: ""
          description: Tx messages type
      tx_json:
        type: string
        example: ""
        description: Raw tx json byte
      height:
        type: integer
        format: int64
        example: 0
      hash:
        type: string
        description: The tx hash
  Comment:
    type: object
    properties:
      id:
        type: integer
        format: uint64
        example: 1
      height:
        type: integer
        format: int64
        example: 0
      sender:
        $ref: '#/definitions/Address'
      token:
        type: string
        example: "abc"
      donation:
        type: integer
        format: int64
        example: 1
      title:
        type: string
        example: "First Comment"
      content:
        type: string
        example: "Comment content"
      content_type:
        type: integer
        format: int8
        example: 3
        description: IPFS:0,Magnet:1,HTTP:2,UTF8Text:3,RawBytes:6
      references:
        type: array
        items:
          $ref: '#/definitions/CommentRef'
      tx_hash:
        type: string
        description: The tx hash
  Slash:
    type: object
    properties:
      validator:
        $ref: '#/definitions/Address'
      power:
        type: string
        example: "0"
        description: Vote power
      reason:
        type: string
        example: ""
      jailed:
        type: boolean
        example: false
  Locked:
    type: object
    properties:
      from_address:
        $ref: '#/definitions/Address'
      to_Address:
        $ref: '#/definitions/Address'
      amount:
        $ref: '#/definitions/Coin'
      unlock_time:
        type: integer
        format: int64
        example: 1565740800
        description: The unix timestamp when tokens can transfer again
      tx_hash:
        type: string
        description: The tx hash
  Donation:
    type: object
    properties:
      sender:
        $ref: '#/definitions/Address'
      amount:
        type: string
        example: "0"
